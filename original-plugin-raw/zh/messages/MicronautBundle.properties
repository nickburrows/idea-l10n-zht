advanced.setting.micronaut.run.using.gradle=使用 Gradle 运行
advanced.setting.micronaut.run.using.gradle.description=默认情况下，IDE 使用 Gradle 生成项目并运行任务。如果禁用，则使用 IDE 运行 Micronaut 配置。
advanced.settings.micronaut=框架。Micronaut
micronaut.add.bean.dependency.fix.family.name=添加对 Bean 的依赖关系
micronaut.add.bean.dependency.fix.text=添加名称与 ''{0}'' 匹配的依赖项
micronaut.bean.class.tooltip.text=Bean
micronaut.bean.markers=上下文和依赖项注入
micronaut.cache.annotator.name=可缓存操作
micronaut.cache.element.choose.title=选择可缓存操作
micronaut.cache.element.no.operations=找不到可缓存的操作
micronaut.cache.element.tooltip.text=转到同名的可缓存操作
micronaut.cache.presentation.type.name=缓存
micronaut.candidates.popup.empty=未找到自动装配的候选项
micronaut.candidates.popup.title=自动装配的候选项
micronaut.config.unresolved.duration.value=值 ''{0}'' 不是有效的持续时间
micronaut.configuration.properties.class.tooltip.text=配置属性
micronaut.data.commons.query.method.inconsistency.inspection.name=不正确的仓库方法声明
micronaut.data.commons.query.method.parameters.inspection.name=不正确的仓库方法形参
micronaut.data.commons.query.method.return.type.inspection.name=不正确的仓库方法返回值类型
micronaut.data.incorrect.method.return.type=此处应为 ''{0}'' 类型
micronaut.data.incorrect.method.return.type.boolean=此处应为布尔类型
micronaut.data.incorrect.method.return.type.void=此处应为 'void' 类型
micronaut.data.inspections.group=Micronaut Data
micronaut.data.mongodb.gutter.name=Micronaut Data MongoDB 映射
micronaut.data.open.in.db.view=在数据库视图中打开
micronaut.data.ql=Micronaut Data QL
micronaut.event.class.tooltip.text=事件类
micronaut.event.listener.tooltip.text=导航到事件发布程序
micronaut.event.listeners.popup.empty=找不到侦听器
micronaut.event.listeners.popup.title=事件侦听器
micronaut.event.markers=应用程序事件
micronaut.event.publisher.tooltip.text=导航到事件侦听器
micronaut.event.publishers.popup.empty=未找到发布程序
micronaut.event.publishers.popup.title=事件发布程序
micronaut.factory.class.tooltip.text=工厂 Bean
micronaut.goto.related.item.group.name=Micronaut
micronaut.http.client.class.tooltip.text=HTTP 客户端
micronaut.http.client.framework.title=Micronaut HTTP 客户端
micronaut.http.controller.class.tooltip.text=HTTP 控制器
micronaut.http.markers=HTTP 映射
micronaut.http.method.mapping.tooltip.text=映射的 HTTP 端点
micronaut.http.server.framework.title=Micronaut HTTP 服务器
micronaut.infrastructure.class.tooltip.text=架构 Bean
micronaut.inject.popup.empty=未找到自动装配的依赖项
micronaut.inject.popup.title=自动装配的依赖项
micronaut.inspection.beans.ambiguous.dependency=不明确的依赖关系: 有多个 Bean 与注入点相匹配
micronaut.inspection.beans.unsatisfied.dependency=未满足的依赖关系: 没有 Bean 与注入点相匹配
micronaut.inspections.cache.annotation.parameters=未解析的缓存注解形参引用
micronaut.inspections.config.properties=Micronaut 应用程序属性
micronaut.inspections.config.properties.missing.closing.bracket=缺少结束 ']'
micronaut.inspections.config.properties.missing.index.value=缺少索引值
micronaut.inspections.config.properties.missing.map.key=缺少映射键
micronaut.inspections.config.properties.non.integer.index=索引值必须是整数
micronaut.inspections.config.yaml=Micronaut application.yaml
micronaut.inspections.group=Micronaut
micronaut.inspections.unresolved.path.variable=未解析的 @PathVariable 引用
micronaut.lifecycle.method.tooltip.text=生命周期方法
micronaut.management.endpoint.class.tooltip.text=管理端点
micronaut.management.framework.title=Micronaut 管理端点
micronaut.management.markers=管理端点映射
micronaut.management.method.tooltip.text=管理端点方法
micronaut.mq.kafka.client.bean.text=Kafka 客户端 Bean
micronaut.mq.kafka.listener.bean.text=Kafka 侦听程序 Bean
micronaut.mq.line.markers.name=Micronaut MQ 方法
micronaut.mq.line.markers.popupTitle=相关消息队列
micronaut.mq.line.markers.tooltip=导航到消息队列用法
micronaut.mq.line.markers.tooltip.single=导航到 ''{0}'' 用法
micronaut.mq.rabbit.client.bean.text=RabbitMQ 客户端 Bean
micronaut.mq.rabbit.listener.bean.text=RabbitMQ 侦听程序 Bean
micronaut.prototype.class.tooltip.text=原型 Bean
micronaut.run.configuration.class.not.specified=未指定 Micronaut 应用程序类
micronaut.run.configuration.description=Micronaut 应用程序
micronaut.run.configuration.name=Micronaut
micronaut.scheduled.method.tooltip.text=计划的方法
micronaut.settings.create.run.configuration=自动创建运行配置(&R)
micronaut.settings.create.run.configuration.tooltip=如果 Micronaut 运行配置尚不存在，则在(重新)导入时添加
micronaut.show.candidates.tooltip.text=导航到自动装配的候选项
micronaut.show.dependencies.tooltip.text=导航到自动装配的依赖项
micronaut.starter.description.for.micronaut.project.starter=创建 <b>Micronaut</b> 应用程序
micronaut.starter.features.label=功能:
micronaut.starter.message.validating.dependencies=正在验证功能…
micronaut.starter.message.validation.error=验证依赖项时发生未知问题。
micronaut.starter.message.validation.title=无效的项目配置
micronaut.starter.select.features.hint=未添加功能
micronaut.starter.selected.features.label=已添加功能:
micronaut.starter.server.url.label=Micronaut 启动服务器 URL
micronaut.starter.version.label=Micronaut:
micronaut.websocket.client.class.tooltip.text=WebSocket 客户端
micronaut.websocket.client.framework.title=Micronaut WebSocket 客户端
micronaut.websocket.markers=WebSocket 映射
micronaut.websocket.method.tooltip.text=WebSocket 映射的方法
micronaut.websocket.server.class.tooltip.text=WebSocket 服务器
micronaut.websocket.server.framework.title=Micronaut WebSocket 服务器