action.Generify.description=转换代码以使用泛型类型
action.Generify.text=将原始类型转换为泛型…
action.RemoveMiddleman.description=将委托内联至所选字段方法
action.RemoveMiddleman.text=移除中间人(_M)…
action.ReplaceTempWithQuery.description=将所选变量转换为方法
action.ReplaceTempWithQuery.text=将临时替换为查询(_Q)…
action.WrapReturnValue.description=使用对象包装指定方法的返回值
action.WrapReturnValue.text=包装方法的返回值(_P)…
cannot.replace.temp.with.query.in.interface=在接口中不能将 temp 替换为查询
constructor.returns.can.not.be.wrapped=无法包装构造函数返回值。
could.not.find.selected.wrapping.class=找不到所选包装类
declaration.s.to.be.generified=声明(s)是泛型{0}
delegating.field=正在委托字段
dialog.message.inner.class.with.name.already.exist=名称为 ''{0}'' 的内部类已存在
dialog.message.invalid.inner.class.name=''{0}'' 是无效的内部类名
dialog.message.invalid.qualified.wrapper.class.name=''{0}'' 是无效的限定包装器类名
dialog.message.invalid.wrapper.class.name=''{0}'' 是无效的包装器类名
dialog.message.invalid.wrapper.class.package.name=''{0}'' 是无效的包装器类软件包名称
dialog.message.wrapper.field.not.found=找不到包装器字段
error.wrong.caret.position.local.name=文本光标应置于要重构的局部变量的名称处
exposed.delegation.command.name=已将委托公开给 {0}
field.selected.is.not.used.as.a.delegate=所选字段不用作委托。
generify.title=将原始类型转换为泛型
method.selected.returns.void=所选方法返回 'void'。
method.to.wrap.returns.from.label=从中包装返回值的方法:
method.whose.return.are.to.wrapped=要包装其返回值的方法
references.to.be.modified.usage.view=要修改的引用{0, choice, 0#(找不到)|1#{0} 个引用|2#{0} 个引用}{1, choice, 0#|1#位于 {1} 个文件中|2#位于 {1} 个文件中}
references.to.expose.usage.view=要显示的引用{0, choice, 0#(找不到)|1#{0} 个引用|2#{0} 个引用}{1, choice, 0#|1#位于 {1} 个文件中|2#位于 {1} 个文件中}
remove.middleman=移除中间人
remove.middleman.column.header=删除
remove.middleman.deleted.hierarchy.conflict={0} 将被删除。层次结构将被破坏
remove.middleman.field.header=移除中间人字段:
remove.middleman.methods.to.inline.title=要内联的方法(&M)
remove.middleman.title=移除中间人
remove.middleman.tooltip.warning=删除将破坏类型层次结构
replace.temp.with.query.title=取代临时与查询
the.caret.should.be.positioned.at.the.name.of.the.field.to.be.refactored=文本光标应置于要重构的字段的名称处。
there.already.exists.a.class.with.the.selected.name=采用所选名称的类已存在
type.cook.command=泛化
type.cook.drop.obsolete.casts=删除废弃转换 (&D)
type.cook.elements.header=Generify的作用域
type.cook.generify.objects=Generify对象(&O)
type.cook.leave.object.parameterized.types.raw=离开对象形参化类型生(&L)
type.cook.perform.exhaustive.search=执行详尽的搜索(&E)
type.cook.preserve.raw.arrays=保存原始数组(&A)
type.cook.produce.wildcard.types=产生通配符类型(&W)
type.cook.ratio.generified={0,choice,-1#不计算|0#{0,number}/{1}}
type.cook.report=泛化的条目: {0}，移除的转换: {1}
wrap.return.value=包装返回值
wrap.return.value.title=包装返回值
wrapped.return.command.name=将返回值包装为 {1}() 的{0}