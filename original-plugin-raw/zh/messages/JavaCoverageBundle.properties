code.coverage.is.not.supported=代码覆盖率支持jre 5.0或更高
collect.code.coverage.statistics.for.tests=收集测试的代码覆盖率统计信息
coverage.button.add.package=添加软件包…
coverage.classes=类
coverage.classes.capitalised=类
coverage.error.jacoco.report.corrupted=Jacoco 报告文件 {0} 可能已损坏，请尝试重新运行
coverage.error.jacoco.report.format=文件不是 Jacoco 报告格式: {0}
coverage.instrumentation.jdk7.compatibility=覆盖率插桩与 JDK 7 不完全兼容
coverage.instrumentation.jdk7.compatibility.veryfy.error.warning={0} 覆盖率插桩可能会导致 JDK 7 出现 java.lang.VerifyError 错误。如果出错，请尝试 IDEA 覆盖率运行程序。
coverage.pattern.filter.editor.choose.package.title=选择软件包
coverage.recompile=重新编译
coverage.settings=显示代码覆盖率选项
coverage.settings.exclude=排除类和软件包
coverage.settings.group=代码覆盖率
coverage.settings.include=指定类和软件包
coverage.settings.menu=覆盖率设置
coverage.settings.runner=指定替代覆盖率运行程序
coverage.settings.test.folders=在测试文件夹中收集覆盖率
coverage.settings.tracing=启用分支覆盖并测试跟踪
coverage.view.column.branch=分支(%)
coverage.view.column.class=类(%)
coverage.view.column.line=行(%)
coverage.view.column.method=方法(%)
coverage.view.no.coverage=无覆盖率
coverage.view.node.summary=软件包 ''{1}'' 中的 {0}
coverage.view.root.node.summary=“作用域中的所有类”中的 {0}
coverage.view.text.classes.covered={0}% 类
coverage.view.text.methods.covered={0}% 方法
coverage.xml.report.title=XML 报告
do.not.show.coverage.data.in.specified.classes.and.packages=不显示指定类和软件包中的覆盖率数据
download.coverage.report.from.target.failed=无法从目标下载覆盖率报告
download.coverage.report.from.target.progress.title=正在从目标下载覆盖率报告…
enables.accurate.collection=由于可以跟踪测试、查看覆盖率统计信息，以及获取每个已覆盖行的其他信息，因此，可以准确收集分支覆盖率。
exclude.coverage.filters.title=要从覆盖率数据中排除的软件包和类
generating.coverage.report=正在生成覆盖率报告…
java.coverage.engine.presentable.text=Java 覆盖率
notification.group.coverage=加载或收集覆盖数据时出错
project.class.files.are.out.of.date=项目类文件已过期，这可能导致覆盖率信息不完整
project.is.out.of.date=项目已过期
record.coverage.filters.title=要包含在覆盖率数据中的软件包和类
report.unknown.outcome=未知结果: {0}
run.configuration.choose.coverage.runner=选择覆盖率运行程序:
run.configuration.coverage.branches=分支覆盖率
run.configuration.coverage.branches.comment=收集 if/switch 语句的所有分支的覆盖率
run.configuration.enable.coverage.in.test.folders=在测试文件夹中启用覆盖率
run.configuration.track.per.test.coverage=按测试覆盖率跟踪
select.to.use.a.code.coverage.runner.other.than.the.built.in.one=选择使用代码覆盖率运行程序，而不是内置运行程序
settings.coverage.java.ignore.empty.private.constructors.of.utility.classes=忽略实用程序类的空 private 构造函数
settings.coverage.java.ignore.implicitly.declared.default.constructors=忽略隐式声明的默认构造函数
settings.coverage.java.java.coverage=Java 覆盖率
show.coverage.data.only.in.specified.classes.and.packages=仅显示指定类和软件包中的覆盖率数据
sub.coverage.notification=每个测试覆盖率的活动: 无可用累积数据