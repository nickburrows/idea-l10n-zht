apple.build.failedWithCode=已失败，代码: {0}
apple.build.progressTitle=正在准备构建
apple.build.success=成功
apple.runconfig.description=Kotlin Multiplatform Mobile iOS 应用程序
apple.runconfig.error.misconfigured=项目配置错误: {0}
apple.runconfig.error.nonMac=仅 macOS 支持 iOS 运行配置
apple.runconfig.error.targetNotFound=未找到所选设备
apple.runconfig.error.xcodeNotFound=无法检测所安装的 Xcode 的版本
apple.runconfig.error.xcodeOldVersion=KMM 插件支持 Xcode {0} 和更高版本，但找到的是 {1}
apple.runconfig.error.xcodeProjEmptySchemes=请检查指定的 Xcode 项目方案
apple.runconfig.error.xcodeProjInvalidProduct=所选方案“{0}”没有 ''PRODUCT_NAME''
apple.runconfig.error.xcodeProjInvalidProductType=所选方案 "{0}" 具有无效的 ''PRODUCT_TYPE'' "{1}"
apple.runconfig.error.xcodeProjInvalidScheme=在 {1} 中找不到所选方案“{0}”
apple.runconfig.error.xcodeProjInvalidSchemeSdk=所选方案“{0}”不支持“{1}”
apple.runconfig.error.xcodeProjNotLocated=请指定 Xcode 项目位置
apple.runconfig.error.xcodeProjNullScheme=请选择 Xcode 方案
apple.runconfig.execTargetLabel=执行目标:
apple.runconfig.title=iOS 应用程序
apple.runconfig.xcodeConfigurationLabel=Xcode 项目配置:
apple.runconfig.xcodeFileHint=选择 Xcode 项目文件
apple.runconfig.xcodeFileLabel=Xcode 项目文件:
apple.runconfig.xcodeSchemeLabel=Xcode 项目方案:
label.informationAboutDSYM.text=要调试应用程序，请在 Xcode 中转到<b>构建设置 > 构建选项 > 调试信息格式</b>，并将其设置为<b>包含 dSYM 文件的 DWARF</b>。
label.informationAboutDSYM.title=在 Xcode 项目中启用 dSYM
property.xcodeproj=xcodeproj
startup.error.outdatedKotlin=由于 Kotlin 插件已过时，Kotlin Multiplatform Mobile 插件不能保证正常工作，在下一次 IDE 启动时将被禁用。<br/>当前版本的 Kotlin Multiplatform Mobile 插件至少需要 ''{0}''<br/>请更新 Kotlin 插件
startup.error.outdatedPlugin=由于 Kotlin Multiplatform Mobile 插件已过时，Kotlin Multiplatform Mobile 插件不能保证正常工作，在下一次 IDE 启动时将被禁用。<br/>请更新 Kotlin Multiplatform Mobile 插件
startup.error.suggestion.action=插件
startup.error.title=Kotlin Multiplatform Mobile 插件问题
startup.error.unknown=由于无法检测到 Kotlin 插件的具体版本，Kotlin Multiplatform Mobile 插件不能保证正常工作，在下一次 IDE 启动时将被禁用。<br/>请将此案例报告至<a href="https://youtrack.jetbrains.com/newIssue?project=KT">我们的问题跟踪器</a>，并附上以下信息<br/>
startup.error.wrongOS=Kotlin Multiplatform Mobile 插件只适用于 macOS
version.compiledAgainstKotlin=针对 Kotlin 编译: {0}
version.kmmPlugin=KMM 插件版本: {0}
version.kotlinPlugin=Kotlin 插件版本: {0}
wizard.module.createCommand=创建 Kotlin Multiplatform 共享模块
wizard.module.description=支持在 iOS 和 Android 之间共享代码的模块。
wizard.module.generateTestsLabel=添加示例测试
wizard.module.moduleNameLabel=模块名称
wizard.module.packageNameLabel=软件包名称
wizard.module.title=Kotlin Multiplatform 共享模块
wizard.project.addSharedTestsHelp=将测试存根添加到通用模块
wizard.project.addSharedTestsLabel=添加共享模块的示例测试
wizard.project.androidAppNameHelp=负责 Android 应用程序的模块的名称
wizard.project.androidAppNameLabel=Android 应用程序名称
wizard.project.description=创建一个包括 iOS 和 Android 应用程序的新 Kotlin Multiplatform Mobile 项目以及一个带有在 iOS 和 Android 上共享的代码的模块。
wizard.project.distributionText=为 Xcode 选择最合适类型的 Kotlin 框架分发:\n<ul>\n<li><b>CocoaPods 依赖项管理器</b>: Kotlin Multiplatform 模块用作 CocoaPods 依赖项。需要安装 Ruby Gem。</li>\n<li><b>常规框架</b>: Kotlin Multiplatform 模块通过内部 Gradle 任务和 Xcode 构建步骤配置进行集成。不需要第三方工具。</li>\n</ul>
wizard.project.documentationUrl=https://kotlinlang.org/lp/mobile/?utm_medium=link&utm_source=product&utm_campaign=ASKMMW&utm_content={0}
wizard.project.errorTitle=项目未配置
wizard.project.iosAppNameHelp=Xcode 项目名称
wizard.project.iosAppNameLabel=iOS 应用程序名称
wizard.project.iosFrameworkDistributionLabel=iOS 框架分布
wizard.project.learnMoreAboutPod=详细了解 CocoaPods 集成。
wizard.project.learnMoreAboutRegularFramework=详细了解 iOS 的 Gradle 打包任务。
wizard.project.library.XCFrameworkUrl=https://kotlinlang.org/docs/mpp-build-native-binaries.html#build-xcframeworks
wizard.project.library.description=创建一个新的 Kotlin Multiplatform Mobile 库项目，其中包括一个在 iOS 和 Android 上共享代码的模块。
wizard.project.library.distributionText=选择最合适类型的 Kotlin 框架工件分发:\n<ul>\n<li><b>XCFramework</b>: Kotlin Multiplatform 框架作为 XCFramework 构建。</li>\n<li><b>CocoaPods 依赖项管理器</b>: Kotlin Multiplatform 框架使用 CocoaPods 规范文件作为框架构建。</li>\n<li><b>常规框架</b>: Kotlin Multiplatform 作为指定原生目标的常规 Apple 框架构建。</li>\n</ul>
wizard.project.library.learnMoreAboutRegularFramework=详细了解 Apple 框架。
wizard.project.library.learnMoreAboutXCFramework=详细了解 Apple XCFrameworks。
wizard.project.library.regularFrameworkUrl=https://kotlinlang.org/docs/apple-framework.html
wizard.project.library.title=Kotlin Multiplatform 库
wizard.project.podDocUrl=https://kotlinlang.org/docs/native-cocoapods.html#install-the-cocoapods-dependency-manager-and-plugin
wizard.project.podInstallFailed=命令 'pod install' 失败。\n请(重新)安装 CocoaPods，然后重试。
wizard.project.podIntegrationUrl=https://kotlinlang.org/docs/native-cocoapods.html#use-a-kotlin-gradle-project-as-a-cocoapods-dependency
wizard.project.regularFrameworkIntegrationUrl=https://kotlinlang.org/docs/mobile/discover-kmm-project.html#ios-application
wizard.project.sharedNameHelp=通用模块名称
wizard.project.sharedNameLabel=共享模块名称
wizard.project.title=Kotlin Multiplatform 应用