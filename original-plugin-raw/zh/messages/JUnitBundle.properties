action.AddToISuite.text=添加到 JUnit 模式套件
action.excludeFromSuite.text=从套件中排除
action.text.test.category={0} 的测试
action.text.test.tags={0} 的测试
action.text.test.unknown.target=未知
cannot.browse.test.inheritors.dialog.title=无法浏览TestCase继承器
category.interface.dialog.title=类别接口
category.is.not.specified.error.message=未指定类别
category.label=类别
change.list.label=更改列表
class.isnt.inheritor.of.testcase.error.message={0}没有继承人的TestCase
class.not.test.error.message=类 ''{0}'' 不是测试
combobox.changelists.all=所有
configuration.not.specified.message=配置测试类型未指定: {0}
create.setup.dialog.message=方法 setUp 已存在，但未使用 {0} 注解。是否注解?
create.setup.dialog.title=创建 setUp 方法
default.junit.config.empty.category=无效
default.junit.config.name.all.in.module={0}中的所有
default.junit.config.name.all.in.package.in.module={1}中的{0}
default.junit.config.name.category=@Category({0})
default.junit.config.name.tags=标记({0})
default.junit.config.name.temp.suite=临时套件
default.junit.config.name.whole.project=整个项目
default.junit.configuration.name=<无名称>
dialog.message.failed.to.resolve.maven.id=无法解析 {0}
dialog.message.no.unique.id.specified.exception=未指定唯一 ID
dialog.title.preparing.test=正在准备测试
directory.0.is.not.found.error.message=找不到目录 ''{0}''
directory.is.not.specified.error.message=未指定目录
directory.label=目录
directory.not.found.error.message=未找到目录 ''{0}''
fork.mode.label=复刻模式(&F):
fork.mode.name=复刻模式
junit.config.with.parameter.0=带有形参“{0}”
junit.configuration.across.module.dependencies.radio=跨模块依赖项
junit.configuration.class.label=类:
junit.configuration.description=JUnit 测试配置
junit.configuration.display.name=JUnit
junit.configuration.fork.mode.class=类
junit.configuration.fork.mode.method=方法
junit.configuration.fork.mode.none=无
junit.configuration.fork.mode.repeat=重复
junit.configuration.in.single.module.radio=在单一模块
junit.configuration.in.whole.project.radio=在整个项目
junit.configuration.kind.all.in.directory=目录中的所有
junit.configuration.kind.all.in.package=软件包中的所有
junit.configuration.kind.by.pattern=模式
junit.configuration.kind.by.tags=标记
junit.configuration.kind.by.unique.id=UniqueId
junit.configuration.kind.category=类别
junit.configuration.kind.class=类
junit.configuration.kind.method=方法
junit.configuration.method.label=方法:
junit.configuration.package.label=包:
junit.configuration.repeat.mode.n.times=N 次
junit.configuration.repeat.mode.once=一次
junit.configuration.repeat.mode.until.failure=直至失败
junit.configuration.repeat.mode.until.stopped=直至停止
junit.configuration.repeat.mode.until.success=Until success
junit.configuration.search.for.tests.label=搜索测试:
junit.entry.point.suggest.package.private.visibility.junit5=建议 Junit 5 测试的 package-private 可见性级别
junit.not.found.in.module.error.message=在模块''{0}''中未找到JUnit
junit5.migration.description=将 JUnit 4 测试注解转移到新的 Jupiter 注解中时，可能会导致出现红色代码! 不会迁移断言。请参阅“Java | JUnit 问题 | JUnit 4 测试可能为 JUnit 5”检查，只迁移可以完全自动转换的测试。
method.name.not.specified.error.message=未指定方法名称
module.does.not.exists=模块''{0}''不存在于项目''{1}''
module.to.choose.classpath.not.specified.error.message=未指定从中选择类路径的模块
no.module.selected.error.message=未选择模块
no.pattern.error.message=未选择模式
no.test.class.specified.error.text=未指定测试类
package.does.not.exist.error.message=软件包 ''{0}'' 不存在
pattern.label=模式
progress.title.download.additional.dependencies=下载其他依赖项…
repeat.count.label=重复计数(&R):
repeat.label=重复(&R):
repeat.name=重复
running.tests.disabled.during.index.update.error.message=运行测试在索引更新期间处于禁用状态
search.scope.module=在单个模块中
search.scope.module.deps=在模块依赖项中
search.scope.name=搜索测试
search.scope.project=在整个项目中
tag.expression.label=标记表达式
tag.name.0.must.be.syntactically.valid.warning=标记名称 [{0}] 的语法必须有效
tags.are.not.specified.error.message=未指定标记
test.class.hint=包含测试的类的完全限定名称
test.discovery.by.all.changes.combo.item=所有
test.group=测试
test.kind.hint=用于搜索测试的资源类型
test.method.doesnt.exist.error.message=测试方法''{0}''不存在
test.method.hint=测试方法的完全限定名称
test.package.hint=包含测试的软件包的名称
test.pattern.hint=用于匹配包含测试的类的名称的正则表达式
uniqueid.label=UniqueId
unused.declaration.junit.test.entry.point=JUnit 测试用例