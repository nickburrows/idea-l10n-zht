bintray.publishing.plugin=Bintray 发布插件可能会在 2021 年 5 月 1 日停止工作
dialog.message.can.t.create.configuration.file=无法创建配置文件 ''{0}''
dialog.message.configuration.file.directory=配置文件为目录 ''{0}''
dialog.message.generate.scripts.error=无法生成 Gradle 脚本
dialog.title.cannot.use.specified.jre=无法使用指定的 JRE
element.description.version.catalog.alias=版本目录别名 ''{0}''
gradle.build.script=<b>Gradle</b> 构建脚本 (*.gradle)
gradle.build.script.with.name=<b>Gradle</b> 构建脚本({0})
gradle.buildscript.search.scope=Gradle 构建脚本
gradle.version.catalog.search.scope=Gradle 构建脚本和版本目录
inspection.best.practises=最佳做法
inspection.display.name.configuration.avoidance=配置避免
inspection.display.name.dependency.notation.required=配置调用不应为空
inspection.display.name.deprecated.configurations=已弃用的配置
inspection.display.name.expected.3.parts.separated.by.colon=依赖关系表示法应由使用 ':' 隔开的 3 个块组成
inspection.display.name.foreign.delegate=可能错误地调用了 Gradle 方法
inspection.display.name.incorrect.plugin.dsl.structure=插件 DSL 结构
inspection.display.name.label.0.is.required=标签 ''{0}'' 为必填项
inspection.display.name.unrecognized.dependency.notation=无法识别的依赖关系表示法
inspection.display.name.unused.version.catalog.entry=未使用的版本目录条目
inspection.message.0.defined.by.1.but.used.within.2=''{0}'' 由 ''{1}'' 定义，但在 ''{2}'' 内使用
inspection.message.0.requires.ordering=''{0}'' 需要特定的项目求值顺序
inspection.message.configuration.is.deprecated=配置方法 ''{0}'' 已弃用
inspection.message.consider.using.0.to.utilize.lazy.behavior=考虑使用 ''{0}'' 来避免不必要的配置
inspection.message.incorrect.buildscript.structure='plugins' 前只允许使用 'buildscript'、'pluginManagement' 和 'plugins'
inspection.message.only.method.calls.to.id.alias.are.available.in.plugins.block=在 'plugins' 块中，只能对 'id' 和 'alias' 进行方法调用
inspection.message.unused.dependency.descriptor=构建脚本中未使用依赖项别名 ''{0}''
inspection.message.unused.plugin.descriptor=构建脚本中未使用插件别名 ''{0}''
inspection.message.unused.version.reference.descriptor=构建脚本中未使用版本引用 ''{0}''
inspection.style=样式
inspection.validity=有效性问题
intention.name.add.configure.each=添加 'configureEach'
intention.name.use.tasks.register=使用 'tasks.register'
jcenter.repository=2022 年 2 月 1 日后，构建不能再解析 JCenter 中的工件
multiple.repository.urls=多个仓库 URL
multiple.repository.urls.fix.name=将多个仓库 URL 替换为单独的仓库块
traffic.light.inspections.disabled=类型检查检查已禁用
traffic.light.inspections.disabled.description=Gradle 项目导入时出现错误，构建脚本中的高亮显示被推迟