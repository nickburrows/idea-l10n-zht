action.SelectKotlinNotebookModuleDependencies.description=这可能导致在项目文件更改后，在运行单元之前调用构建
action.SelectKotlinNotebookModuleDependencies.text=Select Modules to Use in the Notebook
action.SelectKotlinNotebookProjectLibraries.text=Select Project Libraries to Add to the Notebook Classpath
action.ShowKotlinNotebookPreferencesAction.description=编辑 Kotlin Notebook 插件设置
action.ShowKotlinNotebookPreferencesAction.text=Kotlin Notebook 插件设置…
action.ToggleShowExecutionCount.text=显示执行计数
checkbox.should.add.libraries=将项目库添加到 notebook 类路径
checkbox.should.build.project=允许在 Notebook 中使用项目符号
checkbox.should.build.project.comment=这可能导致在项目文件更改后，在运行单元之前调用构建
checkbox.should.show.execution.count=显示执行计数
checkbox.should.typehint.only.active.cell=仅为有效单元应用提供程序
group.KotlinNotebookSettingsActions.text=Kotlin Notebook 设置
inlay.hint.description.prefix=在 Kotlin Notebook 中显示 {0} 的嵌入提示
jkt.meta.description.classpath=显示当前类路径
jkt.meta.description.dumpClassesForSpark=将编译后的 REPL 类存储在特殊目录中，以便与 Spark 集成
jkt.meta.description.help=显示帮助
jkt.meta.description.logHandler=管理日志记录处理程序
jkt.meta.description.logLevel=设置日志记录级别
jkt.meta.description.output=管理输出捕获设置
jkt.meta.description.trackClasspath=记录类路径更改。适用于调试工件解析失败
jkt.meta.description.trackExecution=记录正在执行的代码。适用于调试库支持
jkt.meta.description.use=为支持的库注入代码: 工件解析、默认 import、初始化代码、类型呈现器
jkt.meta.description.useLatestDescriptors=使用最新可用版本的库描述符。默认情况下，会使用捆绑的描述符
jkt.meta.description.vars=获取可视变量值
kotlin.jupyter.action.create.notebook.description=创建新的 Kotlin Notebook
kotlin.jupyter.action.create.notebook.dialog.kind=新建 Kotlin Notebook
kotlin.jupyter.action.create.notebook.dialog.title=新建 Kotlin Notebook
kotlin.jupyter.action.create.notebook.name=创建 Kotlin Notebook {0}
kotlin.jupyter.action.create.notebook.text=Kotlin Notebook
kotlin.jupyter.dependencies.build.error.outdated=由于构建失败，将使用过时的依赖项。不能保证执行结果。
kotlin.jupyter.dependencies.build.error.severe=由于构建错误，无法提供或替换项目级依赖项。请考虑修正构建。
kotlin.jupyter.dependencies.build.error.throwable=在会话初始化期间无法提供项目级依赖项。单元执行中止。
kotlin.jupyter.dialog.select.all.libraries.checkbox=Use all project libraries
kotlin.jupyter.dialog.select.all.modules.checkbox=Use all project modules
kotlin.jupyter.dialog.select.libraries.title=Select Libraries for {0}
kotlin.jupyter.dialog.select.modules.title=Select Module Dependencies for {0}
kotlin.jupyter.refactor.changed.definition=重构声明不会对现有的 {0} 用法产生影响。
kotlin.jupyter.refactor.changed.definition.rerun=考虑执行单元以使更改在整个 Notebook 中生效。
kotlin.jupyter.refactor.compiled.script=重构已编译的脚本成员不会对字节码产生任何影响。请考虑适当的重新声明。
kotlin.jupyter.session.classloader.error=单元类由较新版本的运行时编译。
kotlin.jupyter.session.initial.setup=尚未提供 Notebook 的初始依赖项。考虑执行任何单元。
kotlin.jupyter.session.jdk.setting=考虑更改会话的 JDK 设置。
kotlin.jupyter.session.restart=正在重新启动内核会话。先前的状态被中止。
kotlin.jupyter.settings.JDK.action.preview=指定 JDK 设置
kotlin.jupyter.settings.JDK.path=JDK 路径
kotlin.jupyter.settings.appearance=外观
kotlin.jupyter.settings.build=JVM 和构建
kotlin.jupyter.settings.jvm.extra.args=额外实参
kotlin.jupyter.settings.jvm.max.heap=最大堆大小
kotlin.jupyter.settings.jvm.max.heap.units=MiB
kotlin.jupyter.settings.new.notebook.description=配置为新创建的 Kotlin Notebook 使用的默认设置
kotlin.jupyter.settings.new.notebook.title=新 Notebook 的设置
kotlin.jupyter.settings.title=Kotlin Notebook
kotlin.jupyter.settings.typeHints=类型提示提供程序
kotlin.jupyter.template.context.type.generic=Kotlin Notebook
kotlin.jupyter.template.context.type.meta=魔术和命令
kotlin.jupyter.text.move.notebook.out.of.source.root=此 Kotlin Notebook 位于源根内，这可能会导致问题。请将其移到源根之外。
kotlin.jupyter.toolbar.actions.stop=停止内核
kotlin.jupyter.toolbar.session.name=Kotlin 内核会话
kotlin.jupyter.toolbar.tabs.log={0} 的日志
kotlin.jupyter.toolbar.title=Kotlin 内核: {0}
meta.file.type.description=提供对 Jupyter Kotlin 命令、魔术等的支持。
plugin.updater.notification.group=有可用的 Kotlin Notebook 插件更新