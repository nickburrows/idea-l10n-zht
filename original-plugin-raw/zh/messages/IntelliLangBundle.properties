action.AnActionButton.description.disable.selected.injections=禁用所选注入
action.AnActionButton.description.duplicate=重复
action.AnActionButton.description.enable.selected.injections=启用所选注入
action.AnActionButton.description.export=导出
action.AnActionButton.description.import=导入
action.AnActionButton.text.disable.selected.injections=禁用所选注入
action.AnActionButton.text.duplicate=复制
action.AnActionButton.text.enable.selected.injections=启用所选注入
action.AnActionButton.text.export=导出
action.AnActionButton.text.import=导入
action.AnActionButton.text.move.to.ide.scope=移至 IDE 作用域
action.XmlLanguageInjectionSupport.Anonymous.xml.attribute.injection=XML 特性注入
action.XmlLanguageInjectionSupport.Anonymous.xml.tag.injection=XML 标记注入
action.text.generic.0=泛型{0}
advanced.panel.title=高级
advanced.panel.tooltip.regular.expression.html=<html>输入正则表达式，选择标记或特性的值中应被注入语言的部分。<br>模式应该正好包含一个捕获组。</html>
advanced.panel.tooltip.xpath.expression.html=<html>输入 XPath 表达式，标记/特性还必须额外与上述指定名称条件匹配。<br>这需要安装 XPathView 插件。</html>
advanced.panel.xpath.condition=XPath 条件(&X):
advanced.xml.panel.title=高级
annotation.message.the.pattern=模式应包含一个捕获组
base.injection.panel.label.name=名称(&N):
base.injection.panel.title=位置模式
checkbox.single.file=单文件(&S)
column.info.language=语言
column.info.name=名称
column.info.scope=作用域
command.name.language.injection.configuration.update=语言注入配置更新
configurable.AdvancedSettingsUI.display.name=高级
configurable.InjectionsSettingsUI.display.name=语言注入
dialog.file.chooser.description.please.select.the.configuration.file=请选择要导入的配置文件(通常命名为 IntelliLang.xml)。
dialog.file.chooser.title.import.configuration=导入配置
dialog.message.0.entries.have.been.successfully.imported=已成功导入 {0} 个条目
dialog.message.no.new.entries.have.been.imported=未导入任何新条目
dialog.message.one.entry.has.been.successfully.imported=已成功导入一个条目
dialog.message.the.selected.file=所选文件不包含任何可导入的配置。
dialog.title.export.failed=导出失败
dialog.title.export.selected.injections.to.file=将所选注入导出到文件…
dialog.title.import=导入
dialog.title.import.failed=导入失败
dialog.title.import.successful=导入成功
dialog.title.nothing.to.import=没有要导入的内容
dialog.title.select.annotation.class=选择注解类
dialog.title.select.class=选择类
dialog.title.unable.to.save=无法保存
flag.non.compile.time.constant.expressions=标记非编译时常量表达式
flag.usages.of.non.annotated.elements=在隐含的语言上下文中报告
flag.usages.of.non.annotated.elements.description=在用法上下文隐含某种语言的位置标记无注解元素的用法
inspection.injected.references.display.name=已注入的引用
inspection.injection.not.applicable.display.name=注入注解不适用
inspection.language.mismatch.description=语言不匹配: 应为 ''{0}''，实际为 ''{1}''
inspection.language.mismatch.display.name=语言不匹配
inspection.language.problem.description=语言问题: 在应为 ''{0}'' 的位置找到无注解的引用
inspection.message.expression.does.not.match.pattern=表达式 ''{0}'' 与 ''{1}'' 模式不匹配: {2}
inspection.message.expression.does.not.match.pattern2=表达式 ''{0}'' 与模式不匹配: {1}
inspection.message.language.injection.only.applicable.to.elements.type.string=语言注入仅适用于字符串类型的元素
inspection.message.pattern.annotation.only.applicable.to.elements.type.string=模式注解仅适用于字符串类型的元素
inspection.pattern.not.applicable.display.name=模式注解不适用
inspection.pattern.overridden.by.non.annotated.method.description=无注解的方法重写 @Pattern 方法
inspection.pattern.overridden.by.non.annotated.method.display.name=无注解的方法重写 @Pattern 方法
inspection.pattern.validation.display.name=验证已注解模式
inspection.pattern.validator.description=未替换的表达式
inspection.unknown.language.ID.description=未知语言 ''{0}''
inspection.unknown.language.display.name=未知语言 ID
inspections.language.injection.group.name=语言注入
inspections.pattern.validation.group.name=模式验证
intelliLang.inject.language.action.preview=将 "<code>{0}</code>" 视为所选语言或引用文本的代码。
intelliLang.inject.language.action.text=注入语言或引用
intelliLang.suggest.insert.annotation=是否要插入注解?
intelliLang.suggest.insert.comment=是否要插入注释?
intelliLang.temporary.injected={0} 已临时注入。
intelliLang.uninject.language.action.preview=如果可配置，则移除语言注入。
intelliLang.uninject.language.action.text=取消注入语言或引用
intention.family.name.edit.injection.settings=编辑注入设置
intention.name.language.injection.settings=语言注入设置
java.parameter=Java 形参
label.text.0.injection.1.2.of.3.place.4.enabled={0} 个{0,choice,0#注入|1#注入|2#注入}({2} 个{2,choice,0#位置|1#位置|2#位置}中的 {1} 个已启用)
label.text.move.to.ide.scope=移至 IDE 作用域
label.text.move.to.project.scope=移至项目作用域
label.text.no.injections.configured=未配置任何注入
label.value.pattern=值模式(&V):
language.injection.settings.title=语言注入设置
language.label.id=ID(&I):
language.label.prefix=前缀(&P):
language.label.suffix=后缀(&S):
language.title=语言
method.param.injection.unnamed.placeholder=<未命名>
method.parameter.panel.class.methods=类方法
new.language.name.injection=新 {0} 注入
progress.looking.for=正在查找 ''{0}''
reference.injection.display.name.file.reference=文件引用
settings.add.language.annotation.or.comment=必要时添加 @Language 注解或注释
settings.analyze.references=分析引用(&R)
settings.annotation.classes=注解类
settings.convert.undefined.operands.to.text=将未定义的操作数转换为串联的文本(&T)
settings.do.not.analyze.anything=不进行任何分析(快)(&D)
settings.instrument.with.assertions=包含断言的检测(&I)
settings.instrument.with.illegal.argument.exception=包含 IllegalArgumentException 的检测(&W)
settings.language.annotation.class=语言注解类(&L)
settings.look.for.variable.assignments=查找变量赋值(&V)
settings.no.runtime.instrumentation=无运行时插桩(&N)
settings.pattern.annotation.class=模式注解类(&P)
settings.performance=性能
settings.runtime.pattern.validation=运行时模式验证
settings.substitution.annotation.class=替换注解类(&S)
settings.use.dataflow.analysis=使用数据流分析(慢)(&U)
table.empty.text.no.injections.configured2=未配置任何注入
tag.panel.local.name=本地名称(&L):
tag.panel.namespace=命名空间(&N):
tag.panel.sub.tags=子标记(&T)
tag.panel.title=XML 标记
tooltip.regular.expression.html=<html>输入正则表达式，选择标记或特性的值中应被注入语言的部分。<br>模式应该正好包含一个捕获组。</html>
xml.attribute.panel.label.local.name=本地名称(&O):
xml.attribute.panel.label.name=名称(&N):
xml.attribute.panel.label.namespace=命名空间(&M):
xml.attribute.panel.title=XML 特性
xml.attribute.panel.tooltip.regular.expression=匹配特性名称的正则表达式，如 "on.*"
xml.tag.panel.label.name=名称(&N):