composable.line.marker.tooltip=@Composable 函数调用
compose=Compose
compose.enable.formatting.for.modifiers=为修饰符启用 Compose 格式设置
compose.enable.insertion.handler=使用 Jetpack Compose 时启用增强的自动补全
create.composable.function=创建 @Composable 函数
create.preview=创建预览
errors.captured_composable_invocation=不允许在 {1} 的 {0} 形参内进行 Composable 调用
errors.composable_expected=调用 @Composable 函数的函数必须用 @Composable 注解标记
errors.composable_fun_main=当前不支持 Composable main 函数
errors.composable_function_reference=当前不支持 @Composable 函数的函数引用
errors.composable_invocation=@Composable 调用只能在 @Composable 函数的上下文中进行
errors.composable_property_backing_field=可组合属性不能有支持字段
errors.composable_suspend_fun=无法将 suspend 函数设为 Composable
errors.composable_var=可组合属性不能有支持字段
errors.conflicting_overloads=冲突的重载: {0}
errors.illegal_try_catch_around_composable=Composable 函数调用周围不支持 try catch
errors.missing_disallow_composable_calls_annotation=形参 {0} 不能内联在 {2} 的 lambda 实参 {1} 内而不使用 @DisallowComposableCalls 进行注解
errors.nonreadonly_call_in_readonly_composable=标记为 @ReadOnlyComposable 的 Composable 函数只能调用其他 @ReadOnlyComposable Composable 函数
errors.type_mismatch=类型推断失败。预期类型不匹配: 推断的类型为 {1}，但应为 {0}
file.name=文件名
filter.ignore.compose.runtime.classes=不步入 Compose 内部类
import.compose.state=导入 {0}
recomposition.optimised.variable.message={0} 已被优化掉
recomposition.state.composing=正在 Compose
recomposition.state.different=种
recomposition.state.forced=重组根
recomposition.state.function.description.function=Composable 函数 {0}()
recomposition.state.function.description.lambda=Composable {0}
recomposition.state.label=重组状态
recomposition.state.missing.parameters=无法解析函数形参
recomposition.state.same=相同
recomposition.state.static=静态
recomposition.state.summary=实参: {0}
recomposition.state.this=this
recomposition.state.uncertain=不确定
recomposition.state.unstable=不稳定
recomposition.state.value=值
remove.wrapper=移除包装器
rename.file=重命名文件
rename.files.with.following.names=将具有以下名称的文件重命名为:
surround.with.box.intention.text=使用容器包围
surround.with.column.intention.text=使用列包围
surround.with.row.intention.text=使用行包围
surround.with.widget.intention.text=使用微件包围
wrap.modifiers=包装修饰符