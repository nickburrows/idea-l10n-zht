product.name=dotCover

# Options Page
configurable.name.continuous.testing=持续测试
configurable.name.filtering=筛选
configurable.name.highlighting=高亮显示

configurable.name.dotCover=dotCover

# Document Summary Indicator Popup Menu
action.RiderDotCoverGoToNextUncoveredStatementAction.text=转到下一条未覆盖的语句(_G)
action.RiderDotCoverGoToNextUncoveredStatementAction.description=点击以导航到下一条未覆盖的语句
action.RiderDotCoverGoToPreviousUncoveredStatementAction.text=转到上一条未覆盖的语句(_P)
action.RiderDotCoverGoToPreviousUncoveredStatementAction.description=点击以导航到上一条未覆盖的语句
action.RiderDotCoverShowCoveringTestAction.text=显示覆盖的测试(_S)
action.RiderDotCoverShowCoveringTestAction.description=显示覆盖的测试
action.RiderDotCoverToggleCodeHighlightingAction.text=切换代码高亮显示(_T)
action.RiderDotCoverTriggerContinuousTestingAction.text=触发持续测试

# Coverage Tree Context Menu Actions
action.RiderDotCoverShowCoveringTestCoverageTreeAction.text=显示覆盖的测试(_S)
action.RiderDotCoverCoverageTreeExcludeNodesAndCreateCoverageFilterAction.text=排除并创建运行时覆盖率筛选器
action.RiderDotCoverCoverageTreeExcludeAllNodesExceptSelectedAction.text=排除除此之外的所有节点
action.RiderDotCoverCoverageTreeExcludeNodesAction.text=从覆盖率结果中排除

# Unit Tests Actions
action.RiderUnitTestCoverTreeTwAction.text=覆盖所有测试
action.RiderUnitTestCoverTreeTwAction.description=覆盖当前树中的所有测试(仅在“单元测试”工具窗口中有效的本地操作)
action.RiderUnitTestCoverSolutionTwAction.text=覆盖解决方案中的所有测试(工具窗口)
action.RiderUnitTestCoverSolutionTwAction.description=覆盖解决方案中的所有测试(仅在“单元测试”工具窗口中有效的本地操作)
action.RiderUnitTestCoverCurrentSessionTwAction.text=覆盖当前会话(工具窗口)
action.RiderUnitTestCoverCurrentSessionTwAction.description=覆盖当前会话(仅在“单元测试”工具窗口中有效的本地操作)
action.RiderUnitTestCoverContextTwAction.text=覆盖单元测试(工具窗口)
action.RiderUnitTestCoverContextTwAction.description=覆盖单元测试(仅在“单元测试”工具窗口中有效的本地操作)
action.RiderUnitTestCoverSolutionAction.text=覆盖解决方案中的所有测试
action.RiderUnitTestCoverCurrentSessionAction.text=覆盖当前会话
action.RiderUnitTestCoverContextAction.text=覆盖单元测试(_C)

# Continuous Testing
action.RiderUnitTestSessionContinuousTestingModeAction.text=持续测试选项
action.RiderDotCoverShowContinuousTestingSettingsAction.text=持续测试设置…
action.DisableContinuousTestingAction.text=关闭
action.DisableContinuousTestingAction.description=禁用持续测试
action.RiderUnitTestSessionContinuousTestingModeAction.off.title=自动启动测试\: 关
action.RiderUnitTestSessionContinuousTestingModeAction.mode.title=自动启动测试\: {0}
popup.title.continuous.testing.modes=持续测试模式

# Covering Tests Popup
action.RiderCoveringTestsPopupDebugSelectedTestsAction.text=调试所选测试
action.RiderCoveringTestsPopupDebugSelectedTestsAction.description=调试所选测试
action.RiderCoveringTestsPopupCoverSelectedTestsAction.text=覆盖所选测试
action.RiderCoveringTestsPopupCoverSelectedTestsAction.description=覆盖所选测试
action.RiderCoveringTestsPopupRunSelectedTestsAction.text=运行所选测试
action.RiderCoveringTestsPopupRunSelectedTestsAction.description=运行所选测试
action.RiderCoveringTestsPopupCoverAllTestsAction.text=覆盖所有测试
action.RiderCoveringTestsPopupCoverAllTestsAction.description=覆盖所有测试
action.RiderCoveringTestsPopupRunAllTestsAction.text=运行所有测试
action.RiderCoveringTestsPopupRunAllTestsAction.description=运行所有测试
action.RiderCoveringTestsPopupNewSessionSelectedTestsAction.text=创建新会话
action.RiderCoveringTestsPopupNewSessionSelectedTestsAction.description=创建新会话
action.RiderCoveringTestsPopupNewSessionAndRunSelectedTestsAction.text=创建新会话并运行测试
action.RiderCoveringTestsPopupNewSessionAndCoverSelectedTestsAction.text=创建新会话并覆盖测试
covering.tests.popup.default.title=正在获取信息…
covering.tests.popup.progressbar.tooltip=运行测试
covering.tests.popup.test={0}.<b>{1}</b>    (在 ''{2}'' 中)
covering.tests.popup.caption.is.not.covered.by.tests=测试未覆盖{0}
covering.tests.popup.caption.is.covered.by.one.test=1 个测试覆盖{0}
covering.tests.popup.caption.is.covered.by.some.tests={1} 个测试覆盖{0}
covering.tests.popup.caption.one.test.failed=；1 个测试失败
covering.tests.popup.caption.some.tests.failed=；{0} 个测试失败
covering.tests.popup.caption.has.an.outdated.result=；1 个测试的结果已过时
covering.tests.popup.caption.have.outdated.results=；{0} 个测试的结果已过时

# Unit Test Coverage windows
action.StatisticsTypeComboBoxAction.description=显示覆盖率信息\: {0}
action.RiderDotCoverShowFilteringSettingsAction.text=dotCover 设置…
action.RiderDotCoverHighlightingCodeAction.text=高亮显示代码
action.RiderDotCoverFlattenNamespacesAction.text=平展命名空间
action.RiderDotCoverSaveCoverageSnapshotAction.text=保存快照…
action.RiderDotCoverDropSnapshotAction.text=丢弃快照
action.RiderDotCoverNavigateToCoverageTreeAction.text=从编辑器导航
notification.restart.unity.runtime.filter=dotCover 将在所有测试会话完成后应用更新的运行时筛选器
notification.has.excluded.nodes.description=覆盖率树已排除节点。
notification.has.excluded.nodes.link=显示所有节点
RiderDotCoverSymbolCellRenderer=正在更新…
empty.coverage.panel=无覆盖率信息。
empty.coverage.panel.action.with.shortcut=使用 {0}
target.framework.filter=目标框架筛选器
all.tests=所有测试
all.tests.in.active.session=有效会话中的所有测试
selected.tests.in.active.session=有效会话中的所选测试
type.to.search=输入以搜索
code=代码
coverage.tree.column.info.symbol=符号
coverage.tree.column.info.coverage=覆盖率 (%)
coverage.tree.column.info.statements=未覆盖语句数/语句总数

# Report Actions
group.RiderDotCoverCoverageTreeExportReportMenu.text=导出覆盖率报告
action.RiderDotCoverExportHtmlReportAction.text=导出到 HTML…
action.RiderDotCoverExportJsonReportAction.text=导出到 JSON…
action.RiderDotCoverExportXmlReportAction.text=导出到 XML…
action.RiderDotCoverExportXmlDetailsReportAction.text=导出到详细的 XML…
action.RiderDotCoverExportXmlNDependReportAction.text=导出到适用于 NDepend 的 XML…

# Pencil
rider.pencils.pencilsFilterGroup.CodeCoverage.display.name=代码覆盖率

tab.title.unit.tests.coverage=单元测试覆盖率