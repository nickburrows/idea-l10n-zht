action.AngularJS.Show.Ui.Router.States.Diagram.Action.text=显示 AngularJS UI-Router 状态图
angular.html.template=Angular HTML 模板
angular.svg.template=Angular SVG 模板
angularjs.completion.type.default.selection.keyword=默认选择关键字
angularjs.completion.type.message.format.extension=消息格式扩展
angularjs.completion.type.plural.category=复数类别
angularjs.inspection.expected.integer.after.equals== 后面应为整数值
angularjs.inspection.expected.plural.category=应为复数类别
angularjs.parser.message.duplicate.selection.keyword=重复的选择关键字
angularjs.parser.message.expected.double.lbrace=应为 {{
angularjs.parser.message.expected.double.rbrace=应为 }}
angularjs.parser.message.expected.filter=应为筛选器
angularjs.parser.message.expected.integer.value=应为整数值
angularjs.parser.message.expected.message.in.brace.delimiters={} 分隔符中应为消息
angularjs.parser.message.expected.offset.option=应为偏移选项值
angularjs.parser.message.expected.selection.keyword=应为选择关键字
angularjs.parser.message.missing.or.unknown.message.format.extension=消息格式扩展名缺失或未知
angularjs.parser.message.missing.required.selection.keyword=缺少必需框架关键字 ''{0}''
angularjs.refactoring.selector.invalid.html.attribute.name={0} 不是有效的 HTML 特性名称。
angularjs.refactoring.selector.invalid.html.element.name={0} 不是有效的 HTML 元素名称。
angularjs.symbol.directive=指令
angularjs.ui.router.diagram.action.edit.source.description=跳转到…
angularjs.ui.router.diagram.action.edit.source.name=跳转到…
angularjs.ui.router.diagram.action.new.diagram.description=显示 AngularJS ui-router 状态图
angularjs.ui.router.diagram.action.new.diagram.info.no.router.states.found=找不到 router 状态。
angularjs.ui.router.diagram.action.new.diagram.name=显示 AngularJS ui-router 状态图
angularjs.ui.router.diagram.action.new.diagram.progress=正在构建 {0} 图
angularjs.ui.router.diagram.action.new.diagram.select.main.file=选择主模板文件
angularjs.ui.router.diagram.edge.provides=提供
angularjs.ui.router.diagram.edge.smth.populates.smth={0} 填充 {1}
angularjs.ui.router.diagram.edge.smth.provides={0} 提供
angularjs.ui.router.diagram.error.cant.find.state.definition=找不到状态定义
angularjs.ui.router.diagram.error.cant.find.template.file=找不到模板文件
angularjs.ui.router.diagram.node.name.local=本地
angularjs.ui.router.diagram.node.tooltip.errors={0, plural, one {错误} other {错误}}
angularjs.ui.router.diagram.node.tooltip.warnings={0, plural, one {警告} other {警告}}
angularjs.ui.router.diagram.note.has.embedded.template.definition=具有嵌入式模板定义。
angularjs.ui.router.diagram.provider.name=AngularJS ui-router 状态和视图
angularjs.ui.router.diagram.warning.abstract.state=无法实例化 abstract 状态，因此没有必要为其定义视图。
angularjs.ui.router.diagram.warning.views.are.defined=由于为状态定义了 'views'，状态模板信息将被忽略。
category.name.states=状态
category.name.templateplaceholders=TemplatePlaceholders
category.name.templates=模板
category.name.topleveltemplate=TopLevelTemplate
category.name.views=视图
filetype.angular2html.description=Angular HTML 模板
filetype.angular2svg.description=Angular SVG 模板
livetemplate.description.angularjs.$b=在 Angular 控制器/Angular 控制器函数内为 $scope 定义 $broadcast。您可以更改事件名称和可选事件实参。
livetemplate.description.angularjs.$e=在 Angular 控制器/Angular 控制器函数内为 $scope 定义 $emit。您可以更改事件名称和可选事件实参。
livetemplate.description.angularjs.$f=定义新的 $scope 函数(通常在 AngularJS 控制器内)。您可以更改函数名称和实参。
livetemplate.description.angularjs.$on=在 Angular 控制器内，在 $scope 上为 $broadcast/$emit 定义 $on。您可以更改要侦听的事件名称。
livetemplate.description.angularjs.$v=在 AngularJS 控制器内定义新的 $scope 变量。
livetemplate.description.angularjs.$va=在 AngularJS 控制器内定义一个新的 $scope 变量，并从构造函数实参中赋值。
livetemplate.description.angularjs.$w=为表达式定义 $watch。您可以更改要监视的表达式。
livetemplate.description.angularjs.ngb=AngularJS 中的绑定
livetemplate.description.angularjs.ngc=定义新的 Angular 控制器。您可以更改控制器名称和形参。
livetemplate.description.angularjs.ngdc=带有编译函数的指令
livetemplate.description.angularjs.ngdcf=编译函数
livetemplate.description.angularjs.ngdl=仅具有链接函数的指令。
livetemplate.description.angularjs.ngdlf=指令中的链接函数。
livetemplate.description.angularjs.ngfor=angular.foreach 循环
livetemplate.description.angularjs.ngindex=以原型设计为目的的 Angular 应用的简单引导方式
livetemplate.description.angularjs.ngm=没有配置函数的新 Angular 模块。
livetemplate.description.angularjs.ngma=没有配置函数和变量赋值的新 Angular 模块。
livetemplate.description.angularjs.ngmc=具有配置函数的新 Angular 模块
livetemplate.description.angularjs.ngmfa=模块中的工厂
livetemplate.description.angularjs.ngmfi=定义要附加到先前定义的模块的 Angular 模块筛选器。您可以更改筛选器名称。
livetemplate.description.angularjs.ngms=定义要附加到先前定义的模块的 Angular 模块服务。您可以更改服务名称和服务注入项。
livetemplate.description.angularjs.ngro=定义 AngularJS 路由的 otherwise 条件。
livetemplate.description.angularjs.ngrw=定义 AngularJS 路由的 when 条件。
livetemplate.description.angularjs.ngrwr=使用 resolve 块定义 AngularJS 路由的 when 条件。
livetemplate.description.angularjs.ngsa=从 CDN 导入基础 AngularJS 文件的脚本标记
livetemplate.description.angularjs.ngst=保存 Angular 模板的脚本标记