buildsystem.type.gradle.groovy=Gradle Groovy
buildsystem.type.gradle.kotlin=Gradle Kotlin
buildsystem.type.intellij=IntelliJ
buildsystem.type.intellij.full=IntelliJ 建置系統
buildsystem.type.maven=Maven
configuration.name.run=執行
error.configurator.not.found=找不到模組類型 {0}
error.invalid.module.dependency=模組 {0} 至 {1}${2} 的模組相依關係無效
error.required.settings.are.not.present.0=未組態以下所需設定\n\
{0}
error.template.not.found=找不到 ID 為 {0} 的模板
error.text.expected.0.for.1.but.2.was.found=`{1}` 需要 {0}，但實際為 {2}
error.text.for.setting.0.one.of.1.was.expected.but.2.was.found=對於設定 `{0}`，需要 [{1}] 之一，實際為 `{2}`
error.text.module.0.should.contain.at.least.one.ios.target=模組 {0} 應至少包含一個 iOS 目標
error.text.project.importing.error.kotlin.version.0.reason.1=專案匯入錯誤\n\
Kotlin 版本: {0}\n\
原因: {1}
error.text.project.templates.is.not.supported.in.yaml.for.now=yaml 目前不支持專案模板
gradle.project.settings.distribution.version.kotlin.unsupported=Gradle {1} 不支持 Kotlin {0}
gradle.settings.wizard.unsupported.kotlin.message=Kotlin {0} 不支持 Gradle {1}。\n\
\n\
是否要繼續使用 Kotlin {0} 和 Gradle {1}?
gradle.settings.wizard.unsupported.kotlin.title=不支持的 Gradle 版本
module.configuration.group.android.native=Android 原生
module.configuration.group.ios=iOS
module.configuration.group.linux=Linux
module.configuration.group.macos=macOS
module.configuration.group.windows.mingw=Windows (MinGW)
module.configurator.android=Android
module.configurator.android.setting.android.plugin=Android 延伸模組
module.configurator.android.setting.android.plugin.application=com.android.application
module.configurator.android.setting.android.plugin.library=com.android.library
module.configurator.android.setting.android.plugin.tooltip=將用於當前模組的 Android Gradle 延伸模組
module.configurator.common=通用
module.configurator.ios=IOS
module.configurator.ios.requires.xcode=需要 Xcode
module.configurator.js.browser=瀏覽器
module.configurator.js.node=Node.js
module.configurator.js.target.settings.kind=目標種類
module.configurator.js.target.settings.kind.application=JavaScript 應用程式
module.configurator.js.target.settings.kind.hint=編譯模組的結果
module.configurator.js.target.settings.kind.library=JavaScript 庫
module.configurator.jvm=JVM
module.configurator.jvm.setting.target.jvm.test.framework.tooltip=將用於單元測試的框架
module.configurator.jvm.setting.target.jvm.version=目標 JVM 版本
module.configurator.jvm.setting.target.jvm.version.tooltip=編譯此模組後將產生的 JVM 位元組碼版本
module.configurator.mpp=多平台
module.configurator.native.for.current.system=您的系統
module.configurator.simple.js.browser=Kotlin (適用於瀏覽器)
module.configurator.simple.js.node=適用於 Node.JS 的 JS
module.configurator.tests.setting.framework=測試框架
module.configurator.tests.setting.framework.junit4=JUnit 4
module.configurator.tests.setting.framework.junit5=JUnit 5
module.configurator.tests.setting.framework.kotlin.test=Kotlin Test
module.configurator.tests.setting.framework.none=無
module.configurator.tests.setting.framework.test.ng=TestNG
module.configurator.tests.setting.kotlin.test.desc=<html>為單元測試新增 <a href="https://kotlinlang.org/api/latest/kotlin.test/">kotlin.test</a> 註解和斷言函式</html>
module.configurator.tests.setting.kotlin.test.title=使用 kotlin.test
module.configurator.wasm.simple=Wasm
module.kind.android.module=Android 模組
module.kind.ios.module=iOS 模組
module.kind.js.browser.module=JS 瀏覽器模組
module.kind.js.node.module=JS 節點模組
module.kind.module=模組
module.kind.mpp.module=MPP 模組
module.kind.target=目標
module.name=模組名稱
module.template.console.jvm.description=可在主控台中執行的簡單“Hello World!”Kotlin/JVM 應用程式
module.template.console.jvm.title=主控台套用程序
module.template.js.react.description=針對瀏覽器的 React 應用程式
module.template.js.react.title=React 應用程式
module.template.js.simple.description=針對瀏覽器的空白應用程式
module.template.js.simple.run.configuration.dev=連續模式下的 BrowserDevelopmentRun
module.template.js.simple.run.configuration.prod=連續模式下的 BrowserProductionRun
module.template.js.simple.title=瀏覽器套用程序
module.template.ktor.server.description=後端 Web 伺服器
module.template.ktor.server.title=Web 伺服器
module.template.mpp.mobile.description=使用 Kotlin Multiplatform Mobile (支援在各個平台之間共享通用程式碼)編寫的 iOS 和 Android 版移動應用程式。
module.template.mpp.mobile.title=移動應用程式
module.template.native.console.description=適用於作業系統的簡單 Kotlin/Native 應用程式
module.template.native.console.title=原生套用程序
module.template.react.use.react.redux=使用 react-redux
module.template.react.use.react.redux.description=新增由 Redux 驅動的狀態容器
module.template.react.use.react.router.dom=使用 react-router-dom
module.template.react.use.react.router.dom.description=新增導覽組件以保持 URL 和 UI 同步
module.template.simple.nodejs.description=針對 Node.js 的空白應用程式
module.template.simple.nodejs.title=Node.JS 應用程式
module.template.simple.nodejs.use.kotlinx.nodejs=使用實驗性 Node.js API (kotlinx-nodejs)
module.template.simple.nodejs.use.kotlinx.nodejs.description=允許存取特定於 Node.js 的功能
module.template.simple.use.kotlinx.html=使用 kotlinx.html
module.template.simple.use.kotlinx.html.description=類型安全的 Kotlin DSL，用於建立 HTML 元素和建置 DOM 樹
module.template.wasm.browser.description=使用 Kotlin/Wasm 的簡單瀏覽器應用程式
module.template.wasm.browser.title=使用 Kotlin/Wasm 的瀏覽器套用程序
module.type=模組類型
module.type.android=Android
module.type.common=通用
module.type.js=Kotlin/JS
module.type.jvm=Kotlin/JVM
module.type.native=Kotlin/Native
module.type.wasm=Kotlin/Wasm
parse.error.no.value.for.key=未找到鍵 {0} 的值
plugin.android.setting.sdk=Android SDK
plugin.android.setting.sdk.tooltip=將用於當前套用程序的 Android SDK
plugin.buildsystem.setting.type=建置系統
plugin.buildsystem.setting.type.error.wrong.project.kind=無法使用 {1} 生成 {0} 專案
plugin.kotlin.downloading.kotlin.versions=正在下載 Kotlin 版本列表
plugin.kotlin.setting.modules=模組
plugin.kotlin.setting.modules.error.duplicated.modules=有 {0} 個名稱為 {1} 的模組
plugin.kotlin.setting.modules.error.duplicated.targets=有 {0} 個名稱為 {1} 的目標
plugin.kotlin.setting.project.kind=專案種類
plugin.structure.setting.artifact.id=工件 ID
plugin.structure.setting.artifact.id.tooltip=此專案的主要工件的唯一名稱 – 不適用於 IntelliJ 建置系統
plugin.structure.setting.group.id=組 ID
plugin.structure.setting.group.id.tooltip=您的機構的唯一關鍵字 – 不適用於 IntelliJ 建置系統
plugin.structure.setting.location=位置
plugin.structure.setting.location.error.is.not.empty=目錄不為空
plugin.structure.setting.name=名稱
plugin.structure.setting.version=版本
plugin.structure.setting.version.tooltip=專案生成的主要工件的版本 – 不適用於 IntelliJ 建置系統
plugin.templates.setting.template=專案模板
plugin.templates.setting.template.tooltip=定義初始專案結構。請根據您的用途，從下面選擇一個模板:
project=專案
project.kind.android=Android
project.kind.kmm=Kotlin Multiplatform Mobile
project.kind.kotlin.js=Kotlin/JS
project.kind.multiplatform=Multiplatform
project.kind.singleplatform=JVM
project.template.browser.description=使用 Kotlin/JS 的 Web 前端套用程序
project.template.browser.title=瀏覽器套用程序
project.template.empty.jvm.console.description=使用 Kotlin/JVM 的簡單“Hello World!”應用程式
project.template.empty.jvm.console.title=主控台套用程序
project.template.full.stack.description=具有 Kotlin/JS Web 前端、Kotlin/JVM 伺服器後端和在平台間共享的通用程式碼的 Web 應用程式
project.template.full.stack.title=全堆疊 Web 應用程式
project.template.mpp.lib.description=具有用於跨平台共享的通用程式碼的多平台庫
project.template.mpp.lib.title=庫
project.template.mpp.mobile.description=適用於 iOS 和 Android 並包含在平台間共享的通用程式碼的移動應用程式
project.template.mpp.mobile.title=移動應用程式
project.template.native.console.description=適用於特定平台或多個使用 Kotlin/Native 的平台的原生應用程式
project.template.native.console.title=原生套用程序
project.template.nodejs.description=使用 Kotlin/JS 的 Node.js 執行時的應用程式
project.template.nodejs.title=Node.JS 應用程式
project.template.react.description=使用 Kotlin/JS 和 React UI 框架的 Web 前端套用程序
project.template.react.title=React 應用程式
project.template.wasm.browser.description=使用 Kotlin/Wasm 的簡單瀏覽器應用程式
project.template.wasm.browser.title=使用 Kotlin/Wasm 的瀏覽器套用程序
validation.file.should.exist={0} 的檔案應存在
validation.identifier={0} 應僅包含字母、數字{1}
validation.identifier.additional.symbols=和符號: {0}
validation.should.not.be.blank=指定 {0}
version.error.bad.format=設定 {0} 的版本格式不正確