border.title.docker.compose=docker-compose
configurable.gems.copy.mode.caption=選擇將 Ruby 解釋器和 gem 複製到本地快取的方式:
configurable.gems.copy.mode.mixed=如果專案已啟動，請使用正在執行的容器; 否則，請使用新容器
configurable.gems.copy.mode.run=始終使用新容器
configurable.internal.command.mode.caption=通過以下方式在 Docker 內與 Ruby 環境進行互動:
configurable.internal.command.mode.description=要進行分析，需要在 Docker 內部執行 'which ruby'、'gem env' 和 'rbconfig' 等指令
configurable.internal.command.mode.exec='docker-compose exec'，如果需要則使用 `docker-compose up` 執行專案
configurable.internal.command.mode.mixed=如果專案已啟動，則執行 'docker-compose exec'，否則執行 'docker-compose run'
configurable.internal.command.mode.run='docker-compose run'
configurable.internal.command.mode.sdk.container='docker exec' 位於 SDK 容器中，請根據需要建立 SDK 容器
configurable.name=Ruby 設定
configurable.title.docker.compose=Docker Compose
dialog.message.command.docker.compose.up.failed=指令 'docker-compose up' 執行失敗。檢視 `docker logs` 了解詳細資訊
dialog.message.debug.cannot.proceed.without.rm.gems.volume=在未掛載輔助卷的情況下無法繼續偵錯。請關閉(<code>docker compose down</code>)當前 compose 環境，然後重試。
dialog.message.down.docker.compose.failed=無法關閉 docker-compose
dialog.message.rm.gems.volume.missing=RubyMine 需要為正在執行的 compose 服務掛載一個特殊的輔助卷。\n\
RubyMine 將關閉(<code>docker compose down</code>)當前的 compose 環境。\n\
要繼續嗎?
dialog.message.up.docker.compose.failed=無法啟動 docker-compose
ruby.docker.compose.command.type.exec.name=docker-compose exec
ruby.docker.compose.command.type.run.name=docker-compose run
ruby.docker.compose.command.type.up.name=docker-compose up
ruby.docker.compose.down.project=docker-compose down
ruby.docker.compose.sdk.bundle.install.quick.fix.title=執行 'docker-compose build'
ruby.docker.compose.sdk.precheck.message=正在檢查 docker-compose 服務
ruby.docker.compose.up.project=docker-compose up
ruby.docker.no.execution.result=無法執行執行組態
ruby.docker.run.configuration.settings.pane.title=Docker
ruby.docker.sdk.bundle.install.quickfix.title=執行 'docker build .'
ruby.docker.sdk.cache.clearing=正在清除本地 gem 快取目錄: {0}
ruby.docker.sdk.downloading=正在下載: {0}
ruby.docker.volume.ownership.change.failed=無法更改 Docker 卷 ''{0}'' 的所有權。
ruby.docker.volume.remove.failed=無法移除 Docker 卷 ''{0}''。
ruby.docker.volume.setup.failed=無法設定 Docker 卷 ''{0}''。
ruby.sdk.bundle.install.and.docker.build.quick.display.name=在執行的容器中執行 'bundle install' 並重新建置 Docker 鏡像
ruby.sdk.bundle.install.quick.display.name=重新建置 Docker 鏡像