action.Valgrind.ImportAction.text=匯入 Valgrind XML 結果
action.Valgrind.SuppressAction.text=禁止
copy.error.with.stack.trace.to.clipboard.action.title=將帶有堆疊的警告複製到剪貼簿
dynamic.analysis.tools.configurable.name=動態分析工具
dynamic.analysis.tools.memcheck.border.title=Valgrind Memcheck
dynamic.analysis.tools.sanitizers.configurable.name=Sanitizers
dynamic.analysis.tools.valgrind.configurable.name=Valgrind
memory.profile.directory.label=目錄:
memory.profile.file.label=檔案:
memory.profile.function.label=函式:
memory.profile.import.title=正在匯入 {0} 結果
memory.profile.instruction.pointer.label=指令指針:
memory.profile.line.label=行:
memory.profile.node.empty=<空>
memory.profile.object.label=物件:
memory.profile.panel.empty.preview=選擇一個堆疊幀以獲取更多資訊
memory.profile.panel.frame.information.title=框架資訊
memory.profile.panel.loading.preview.label=正在載入預覽…
memory.profile.panel.preview.editor.title=預覽編輯器
memory.profile.process.output.from.remote=正在遠端處理 {0} 輸出
memory.profile.warnings.count={0} 個{0,choice, 0#警告|1#警告|2#警告}
notification.group.sanitizers=Sanitizers
notification.group.valgrind=Valgrind
sanitizer.fatal.error.title=遇到了致命錯誤
sanitizers.compiler.min.version.supported=註: 要啟用此功能，需要 Clang (>={0})或 GCC(>={1})
sanitizers.fatal.error.during.debug=LeakSanitizer 無法在 ptrace (strace、gdb 等)下工作
sanitizers.import.flags.button=從現有環境變數匯入標誌
sanitizers.llvmSymbolizer.notification.text=找不到 llvm-symbolizer。要通過導覽獲取堆疊追蹤，請將 *SAN_SYMBOLIZER_PATH 環境變數設定為指向 llvm-symbolizer 二進制檔案，或確保 llvm-symbolizer 位於您的 PATH 中。
sanitizers.llvmSymbolizer.notification.title=Google Sanitizers
sanitizers.progress=程序正在執行…
sanitizers.runtime.flags.border.title=執行時標誌
sanitizers.runtime.flags.hint=各工具解析相應環境變數中的選項
sanitizers.runtime.flags.hint.note=注意: log_path、stack_trace_format、print_summary、print_stacktrace 將被覆蓋
sanitizers.set.detect.leaks.to.zero=設定 'detect_leaks=0'
sanitizers.tabTitle=Sanitizers
sanitizers.use.visual.representation.checkbox=為 Sanitizer 的輸出使用視覺表示
valgrind.argument.hint=將自動新增以下實參: --tool=memcheck、--xml=yes、--xml-file=<file>、--gen-suppressions=all、<program>、程式引數和所有禁止檔案
valgrind.configurable.add.suppression.files.label=新增禁止檔案:
valgrind.configurable.executable.dialog.title=Valgrind 可執行檔案路徑
valgrind.configurable.executable.label=Valgrind 可執行檔案:
valgrind.configurable.no.suppression.files=無禁止檔案
valgrind.confugurable.analysisOptions.label=Memcheck 選項:
valgrind.ctest.invalid.trace.children.parameter=Valgrind 可能不會顯示 CTest 執行的結果，因為 `--trace-children` 設定為 `no`。
valgrind.executor.description=使用 Valgrind 記憶體檢查器分析所選組態
valgrind.executor.run.action=執行 Valgrind Memcheck
valgrind.executor.run.action.with.configuration=通過 Valgrind Memcheck 執行 {0}
valgrind.fileNotFound=找不到 Valgrind 可執行檔案: ''{0}''<br><a href="">組態</a>
valgrind.no.debug.info.hint=未找到與檔案相關的資訊。請確保程序是在偵錯模式下建置的，以便能夠導覽到原始碼。
valgrind.prepare.suppression.files=正在準備 Valgrind 禁止檔案…
valgrind.progress=Valgrind 正在執行…
valgrind.sanitizers=Valgrind 在啟用 Google Sanitizers 的情況下可能無法正常工作
valgrind.suppress.action.description=選擇要新增禁止的檔案
valgrind.suppress.action.title=選擇禁止檔案