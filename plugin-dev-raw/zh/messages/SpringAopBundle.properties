JdkProxiedBeanTypeInspection.could.not.determine.type=無法確定設定了 JDK 代理 Bean 類型
JdkProxiedBeanTypeInspection.key=不正確的 JDK 代理 Bean 類型
SpringAopAnnotator.annotator.name=AOP (XML)
aop.advice.matching.aspect.bean=一些建議與此 Bean 符合
aop.enable.aspectj.fix.text=將 <aop:aspectj-autoproxy/> 新增到 Spring 組態
aop.errors.inspection.display.name=不正確的 Spring AOP 通知或顧問元素
aop.inspection.group=Spring AOP
aop.pointcut.inspection.display.name=不正確的 Spring AOP 切入點表達式
aop.warning.aspectj.isnt.enabled=未啟用 @AspectJ 支援
aop.warnings.inspection.display.name=不正確的 Spring AOP 切面或切入點元素
error.pointcut.or.pointcut.ref.should.be.defined=應定義 pointcut 或 pointcut-ref 特性
jdk.proxy.intercepts.class=Bean 屬性必須具有接口類型: ''{0}''
missing.aspectj.autoproxy.inspection.display.name=缺少 aspectj-autoproxy
this.pointcut.designator.isn.t.supported.by.spring=Spring 不支持 {0} 切入點指示符
use.cglib.proxying=使用 CGLIB 代理
warning.pointcut.should.have.id=切入點應具有 ID