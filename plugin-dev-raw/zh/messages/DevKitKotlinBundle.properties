inspection.extension.class.should.not.be.open.text=擴展類別不應為 open
inspection.light.service.must.not.be.open.message=輕量服務不能為開放
inspections.companion.object.in.extension=擴展中的伴生物件
inspections.companion.object.in.extension.message=Companion objects in IDE extension implementations may only contain a logger and constants
inspections.create.object.and.move.prohibited.declarations.fix.text=建立物件並移動禁止的宣告
inspections.forbidden.method.in.suspend.context=禁止在 suspend 上下文方法中使用
inspections.forbidden.method.in.suspend.context.check.canceled.fix.text=將 'ProgressManager.checkCanceled' 取代為協同程序友好的 'checkCancelled'
inspections.forbidden.method.in.suspend.context.check.canceled.text=不在 suspend 上下文中呼叫 'ProgressManager.checkCanceled'。使用頂層 'checkCancelled' 函式
inspections.forbidden.method.in.suspend.context.default.modality.state.text='defaultModalityState()' 在 suspend 上下文中不起作用。如果確實有必要，請使用 'contextModality()'
inspections.forbidden.method.in.suspend.context.invoke.and.wait.fix.text=將 'invokeAndWait' 呼叫取代為 'withContext(Dispatchers.EDT) {}'
inspections.forbidden.method.in.suspend.context.invoke.and.wait.text='invokeAndWait' 可能會阻塞當前協同程序。請改用 'Dispatchers.EDT'
inspections.forbidden.method.in.suspend.context.invoke.later.fix.launch.text=將 'invokeLater' 取代為 'launch(Dispatchers.EDT)'
inspections.forbidden.method.in.suspend.context.invoke.later.fix.with.context.text=(可能會改變語意)將 'invokeLater' 呼叫取代為 'withContext(Dispatchers.EDT) {}'
inspections.forbidden.method.in.suspend.context.invoke.later.text='invokeLater' 在 suspend 上下文中非慣用。請改用 'Dispatchers.EDT'
inspections.forbidden.method.in.suspend.context.navigate.to.suspend.context=導覽到 suspend 上下文
inspections.forbidden.method.in.suspend.context.text=使用 @RequiresBlockingContext 註解的方法 ''{0}''。它不是為在 suspend 函式中呼叫而設計的
inspections.plugin.extension.registers.kotlin.object=擴展類別為 Kotlin 物件
inspections.plugin.kotlin.object.registered.as.extension=註冊為擴展的 Kotlin 物件