comment.lesson.name=註釋程式碼行和塊
comment.line.uncomment.that.line=使用相同的快捷方式取消註釋註釋行\: 將文字游標置於該行中的任意位置，然後按 {0}。
comment.line.uncomment.several.lines=要取消對多行的註釋，請選擇所有註釋行，然後按 {0}。
comment.block.comment=若要使用塊註釋 {0} 進行註釋，請選擇程式碼塊並按 {1}。
comment.block.uncomment=要取消對塊註釋的註釋，請將文字游標置於註釋塊中的任意位置，然後按 {0}。
file.structure.lesson.name=檔案成員和結構
file.structure.open.popup=大型檔案可能很難導覽；一個很好的開始方法是檢視其成員。按 {0} 可列出所有檔案成員。
file.structure.request.prefixes=假設您想找到名稱中含有 {0} 和 {1} 單詞的方法。輸入 {2} (所需單詞的前綴)可篩選成員列表。
file.structure.toolwindow=您也可以在專用工具視窗中參照檔案結構\: 按 {0} 可將其開啟。
file.structure.help.link=檔案結構和其他上下文導覽指令

basic.completion.lesson.name=程式碼補全
basic.completion.start.typing=預設情況下，<ide/> 會在您輸入時發出補全建議。開始在文字游標所在的位置輸入 {0}，您將看到符合建議。
basic.completion.choose.first=最佳符合項在補全列表中以藍色醒目提示\: 按 {0} 將其選中。
basic.completion.activate=如果未自動建議補全，則按 {0} 手動呼叫。
basic.completion.choose.item=在補全列表中選擇 {0} 並按 {1}。
basic.completion.complete=您可以自動插入所有必要的語法元素(圓括號、大括號、分號等)並轉到可以開始輸入下一條語句的位置。按 {0} 可補全此語句。

rename.press.rename=<strong>重新命名</strong>重構會自動更新對重新命名符號的所有參照。您可以從宣告或該符號的任何用法開始重構。按 {0} 可重新命名 <code>Car</code> 類別的 {1} 屬性。
rename.type.new.name=輸入此屬性的新名稱(例如 {0})，然後按 {1}。
rename.dialog.title=重新命名
rename.epilogue=請注意，重構沒有觸及 <strong>Person</strong> 的 <code>Name</code> 屬性。即使在同一上下文中有名稱類似的符號，也可以安全使用。

extract.variable.replace.all=所選表達式在範例程式碼中出現 3 次。選擇相應的條目以取代所有這些表達式。
help.refactor.this=“重構此”選單
extract.variable.choose.type=選擇是對新變數使用 ''var'' 還是顯式類型，然後按 {0}。
extract.variable.choose.name=指定變數名稱或保留建議內容。再次按 {0} 可完成重構。
refactoring.menu.extract.interface=我們選擇 {0} 重構，它可以幫助基於當前類別的成員快速建立新接口。
refactoring.menu.extract.interface.dialog=指定新接口的名稱，並選中應在其中宣告的方法旁邊的複選框，然後點擊<strong>下一步</strong>以完成重構。
refactoring.menu.finish=當文字游標位於成員、變數或字串文字上時，嘗試按 {0} 可檢視不同上下文中可用的重構。