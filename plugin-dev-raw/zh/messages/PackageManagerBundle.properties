cmake.auotreload.task.name=重新載入 CMake
cmake.hints.view.action.name=將軟體套件新增到 CMakeLists.txt
cmake.hints.view.window.hint=將此程式碼複製到您的 CMakeLists.txt 並在必要時更改目標
cmake.hints.view.window.name=將軟體套件新增到 CMakeLists.txt
cmake.hints.view.window.ok.button.name=複製到剪貼簿
full.error.output.view.action.name=顯示輸出
full.error.output.view.window.name=輸出
json.file.modificator.error.read.json=無法讀取檔案 {0}
json.file.modificator.read=讀取 {0}
json.file.modificator.update=更新 {0}
json.file.modificator.write=寫入 {0}
label.checking.correctness.package.manager=正在檢查軟體套件管理器狀態
label.error.when.checking.package.manager.make.sure.path.correct.cloned.repository.lies.there.that.it.was.bootstrap=檢查軟體套件管理器時出錯。\n請確保路徑正確並檢查儲存庫是否已成功引導。
manifest.manager.insert.to.vcpkg.configuration.json.action.name=將軟體套件新增到 {0}
manifest.manager.insert.to.vcpkg.json.action.name=將軟體套件新增到 {0}
manifest.manager.progress.title.modification.baseline.file=正在更新 {0}
manifest.manager.progress.title.modification.baseline.json=正在更新 {0}
manifest.manager.progress.title.vcpkg.json.modification=正在更新 {0}
manifest.manager.remove.from.vcpkg.configuration.json.action.name=刪除 {0} 中的軟體套件用法
manifest.manager.remove.from.vcpkg.json.action.name=刪除 {0} 中的軟體套件用法
manifest.manager.unable.to.create.file=無法建立檔案: ${0}
manifest.manager.update.vcpkg.json=更新 vcpkg.json
progress.title.checking.for.install=正在尋找 vcpkg
remove.package.manager.window.checkbox.delete.files=從磁碟中移除所有檔案
remove.package.manager.window.name=刪除 {0}
remove.package.manager.window.task.remove.from.disk=正在移除檔案
remove.package.manager.window.want.to.remove=確定要刪除 {0} 嗎?
toolwindow.button.edit.package.manager.description=編輯 {0}
toolwindow.button.edit.package.manager.name=編輯 {0}
toolwindow.button.new.package.manager.button.name=新增新的軟體套件管理器
toolwindow.button.new.package.manager.description=新增新的軟體套件管理器
toolwindow.button.new.package.manager.name=新增 {0}
toolwindow.console.placeholder=[{0} 行]
toolwindow.install.multiple.window.label.choose.one=選擇要安裝的軟體套件
toolwindow.install.multiply.window.name=安裝軟體套件
toolwindow.install.multiply.window.notification.broken.package.manager=安裝過程中出錯\n{0} 不可用
toolwindow.install.multiply.window.notification.can't.find.package.manager=找不到 Vcpkg。請確保它已在 Vcpkg 工具視窗中組態
toolwindow.install.multiply.window.task.find.packages=正在尋找軟體套件
toolwindow.left.panel.linked.to=已鏈接到 {1} 個中的 {0} 個
toolwindow.left.panel.linked.to.single=已鏈接到 "{0}"
toolwindow.left.panel.tooltip=已鏈接到: {0}
toolwindow.name.console=主控台: {0}
toolwindow.name.vcpkg=軟體套件
toolwindow.not.selected.package.manager=未選擇軟體套件管理器。\n請選擇軟體套件管理器
toolwindow.notification.key=軟體套件管理器通知
toolwindow.problem.cmake.description=找不到軟體套件 {0}
toolwindow.problem.cpp.description=找不到檔案 {0}
toolwindow.problem.do.not.show.this.button.name=不再建議
toolwindow.problem.do.not.show.this.button.notification=建議已被停用。要啟用，請轉到 Vcpkg 工具視窗，然後在“設定”選單中選擇相應的選項
toolwindow.problem.notification.profile.cant.find.package.manager=工具鏈參數路徑上沒有軟體套件管理器
toolwindow.problem.notification.profile.cant.found.toolchain=沒有指定工具鏈參數路徑
toolwindow.problem.problem.name=修正…
toolwindow.problem.solve.by.installing.another.package.manager.install.new.description={0}\n改用 vcpkg ''{1}''
toolwindow.problem.solve.by.installing.another.package.manager.install.new.name=安裝新的 ''{0}''
toolwindow.problem.solve.by.installing.many.packages.description={0}\n安裝下面其中一項: {1}
toolwindow.problem.solve.by.installing.many.packages.name=顯示候選項
toolwindow.problem.solve.by.installing.one.package.description={0}\n安裝 ''{1}''
toolwindow.problem.solve.by.installing.one.package.name=安裝 ''{0}''
toolwindow.problem.solve.by.use.another.package.manager.description={0}\n改用 vcpkg ''{1}''
toolwindow.problem.solve.by.use.another.package.manager.name=使用 vcpkg“{0}”
vcpkg.add.new.package.manager.field.local.path=目錄:
vcpkg.add.new.package.manager.field.local.path.name.window=選擇安裝目錄
vcpkg.add.new.package.manager.field.name=名稱:
vcpkg.add.new.package.manager.field.url=URL:
vcpkg.add.new.package.manager.name.must.be.not.blank=名稱不得為空
vcpkg.add.new.package.manager.name.must.be.unique=名稱必須唯一
vcpkg.add.new.package.manager.name.of.triselect=將 vcpkg 整合新增到現有 CMake 組態檔案
vcpkg.add.new.package.manager.path.already.exists=目錄 {0} 已存在。它的內容將被視為軟體套件管理器。
vcpkg.add.new.package.manager.path.must.be.correct=路徑必須正確
vcpkg.add.new.package.manager.path.must.be.not.blank=安裝目錄不能為空
vcpkg.add.new.package.manager.path.show.dialog=將在 {0} 中建立軟體套件管理器
vcpkg.add.new.package.manager.rename.package.manager=名稱為 ''{0}'' 的 vcpkg 被重命名為 ''{1}''
vcpkg.add.new.package.manager.table.profile.already.enabled=(使用 ''{0}'')
vcpkg.add.new.package.manager.url.must.be.valid=URL 必須有效
vcpkg.add.new.package.manager.window.name=新增 Vcpkg
vcpkg.edit.package.manager.advanced.settings=進階設定
vcpkg.edit.package.manager.force.cmake.ninja.sources.description=設定 VCPKG_FORCE_SYSTEM_BINARIES 變數並將 CMake 和 Ninja 新增到 PATH
vcpkg.edit.package.manager.force.cmake.ninja.sources.name=使用系統二進制檔案
vcpkg.edit.package.manager.window.name=編輯 Vcpkg
vcpkg.indicator.task.label.install.package=正在安裝 ''{0}''
vcpkg.indicator.task.label.installed.find=正在尋找已安裝的軟體套件
vcpkg.indicator.task.label.remove.package=正在移除 ''{0}''
vcpkg.indicator.task.label.search.package=正在尋找軟體套件
vcpkg.name=vcpkg
vcpkg.name.plural=vcpkg 儲存庫
vcpkg.registry.add.new.package.manager.field.local.path=目錄:
vcpkg.registry.add.new.package.manager.field.name=名稱:
vcpkg.registry.add.new.package.manager.window.name=新增 Vcpkg 註冊表
vcpkg.registry.adding.package.wizard.create.files.background.task=為軟體套件建立檔案
vcpkg.registry.adding.package.wizard.window.name=Vcpkg 註冊表新軟體套件
vcpkg.registry.adding.packages.create.new.package.loading.packages=正在載入軟體套件
vcpkg.registry.adding.packages.step.dependencies.actions.add.package.description=將此軟體套件新增到相依項
vcpkg.registry.adding.packages.step.dependencies.actions.add.package.name=新增到相依項
vcpkg.registry.adding.packages.step.dependencies.actions.remove.package.description=從相依項中移除此軟體套件
vcpkg.registry.adding.packages.step.dependencies.actions.remove.package.name=從相依項中移除
vcpkg.registry.adding.packages.step.main.package.already.exists=存在名稱為 {0}、版本為 {1} 的軟體套件
vcpkg.registry.adding.packages.step.main.package.name=名稱:
vcpkg.registry.adding.packages.step.main.package.name.comment=在搜尋、安裝和移除軟體套件時將使用此名稱
vcpkg.registry.adding.packages.step.main.package.name.must.be.not.empty=名稱不能為空
vcpkg.registry.adding.packages.step.main.package.version=版本:
vcpkg.registry.adding.packages.step.portfile.creating.bitbucket.data.name=BitBucket
vcpkg.registry.adding.packages.step.portfile.creating.bitbucket.data.ref.description=一個不會改變內容的穩定 git commit-ish (理想情況下是一個標籤)。這不應該是一個分支。對於沒有正式發佈的儲存庫，這可以設定為當前最新 master 的完整提交 ID。如果指定了 REF，則還必須指定 SHA512。
vcpkg.registry.adding.packages.step.portfile.creating.bitbucket.data.ref.name=Ref
vcpkg.registry.adding.packages.step.portfile.creating.bitbucket.data.rep.description=BitBucket 上的組織或使用者和儲存庫。範例: Microsoft/cpprestsdk
vcpkg.registry.adding.packages.step.portfile.creating.bitbucket.data.rep.name=儲存庫
vcpkg.registry.adding.packages.step.portfile.creating.cmakelists.must.exists=CMakeLists.txt 必須存在
vcpkg.registry.adding.packages.step.portfile.creating.directory.must.exists=目錄必須存在
vcpkg.registry.adding.packages.step.portfile.creating.git.data.ref.description=要下載的提交的 git sha
vcpkg.registry.adding.packages.step.portfile.creating.git.data.ref.name=Ref
vcpkg.registry.adding.packages.step.portfile.creating.git.data.url.description=Git 儲存庫的 URL
vcpkg.registry.adding.packages.step.portfile.creating.github.data.name=Github
vcpkg.registry.adding.packages.step.portfile.creating.github.data.repo.description=GitHub 上的組織或使用者和儲存庫。範例: Microsoft/cpprestsdk
vcpkg.registry.adding.packages.step.portfile.creating.github.data.repo.name=儲存庫
vcpkg.registry.adding.packages.step.portfile.creating.gitlab.data.name=Gitlab
vcpkg.registry.adding.packages.step.portfile.creating.gitlab.data.repo.description=組織或使用者加 Gitlab 實例上的儲存庫名稱。範例: gitlab-org/gitlab-ce
vcpkg.registry.adding.packages.step.portfile.creating.gitlab.data.repo.name=儲存庫
vcpkg.registry.adding.packages.step.portfile.creating.gitlab.data.url.description=要使用的 Gitlab 實例的 URL
vcpkg.registry.adding.packages.step.portfile.creating.sha512.description=應與來自資料的歸檔符合的 SHA512 雜湊。最容易的確定方式為: 首先將其設定為 0，然後嘗試建置連接埠。錯誤訊息將包含完整的雜湊值，可以將其複製回連接埠檔案。
vcpkg.registry.adding.packages.step.portfile.creating.sha512.validation=該欄位可以為零(以使其正確)或正確的 SHA-512
vcpkg.registry.adding.packages.step.portfile.creating.source.data.name=源
vcpkg.registry.adding.packages.step.portfile.creating.source.data.source.path.description=該目錄的內容將在安裝過程中被複製。在專案的根中有一個 CMakeLists.txt 檔案非常重要。同樣重要的是，如果目錄不可用，安裝也將不可用
vcpkg.registry.adding.packages.step.portfile.creating.source.data.source.path.name=源目錄
vcpkg.registry.adding.packages.step.portfile.creating.sourceforge.data.filename.description=檔案的本地名稱。檔案在連接埠之間共享，因此檔案可能需要重新命名以使其明確歸屬於此連接埠並避免衝突
vcpkg.registry.adding.packages.step.portfile.creating.sourceforge.data.filename.name=檔名
vcpkg.registry.adding.packages.step.portfile.creating.sourceforge.data.name=SourceForge
vcpkg.registry.adding.packages.step.portfile.creating.sourceforge.data.repo.description=SourceForge 上的組織或使用者和儲存庫。範例: cunit/CUnit
vcpkg.registry.adding.packages.step.portfile.creating.sourceforge.data.repo.name=儲存庫
vcpkg.registry.adding.packages.step.portfile.creating.url.data.url.description=正確的 URL
vcpkg.registry.adding.packages.step.portfile.creating.url.data.url.name=URL
vcpkg.registry.adding.packages.step.portfile.creating.url.data.url.validation=應為有效的 URL
vcpkg.registry.configurator.task.name=正在更新“{0}”
vcpkg.registry.edit.package.manager.failed.not.installed.package.manager.notification=無法尋找註冊表
vcpkg.registry.edit.package.manager.loading.text=正在載入轉換…
vcpkg.registry.edit.package.manager.no.packages.to.add.more=更多…
vcpkg.registry.edit.package.manager.no.packages.to.add.text=沒有要新增的軟體套件
vcpkg.registry.edit.package.manager.old.registry.get=舊版本
vcpkg.registry.edit.package.manager.old.registry.is.add=新增到當前專案
vcpkg.registry.edit.package.manager.old.registry.name=舊註冊表版本
vcpkg.registry.edit.package.manager.row.name=軟體套件名稱
vcpkg.registry.edit.package.manager.row.version.name=版本
vcpkg.registry.edit.package.manager.table.add.to.registry=新增到註冊表
vcpkg.registry.edit.package.manager.table.name=軟體套件名稱
vcpkg.registry.edit.package.manager.table.version=版本
vcpkg.registry.edit.package.manager.version.name.already.exists=名稱為“{0}”的基線已存在
vcpkg.registry.edit.package.manager.window.name=編輯 Vcpkg 註冊表
vcpkg.registry.registry.info.create.file=建立 {0}
vcpkg.registry.registry.info.create.file.progress.bar=建立 {0}
vcpkg.registry.registry.info.delete=刪除註冊表
vcpkg.registry.registry.info.edit.add.version=新增新版本
vcpkg.registry.registry.info.edit.name=編輯註冊表名稱
vcpkg.registry.registry.info.edit.select.old.version=選擇舊版本
vcpkg.registry.registry.info.loading.file.progress.bar=正在載入檔案
vcpkg.registry.registry.info.loading.file.status=正在載入…
vcpkg.registry.registry.info.open.file=開啟 {0}
vcpkg.registry.registry.info.registry.not.initialized=正在初始化註冊表…
vcpkg.registry.task.check.for.install.failed=無法安裝註冊表
vcpkg.registry.task.check.for.install.package.manager.failed.ioexception=無法建立或存取目錄
vcpkg.registry.task.check.for.install.package.manager.failed.securityexception=無法存取檔案
vcpkg.registry.task.get.baseline.failed.get.ports=獲取連接埠時出錯
vcpkg.registry.task.get.baseline.failed.get.registry=獲取註冊表時出錯
vcpkg.registry.task.get.baseline.name=獲取基線
vcpkg.registry.task.install.package.manager=正在安裝 Vcpkg 註冊表
vcpkg.registry.task.install.package.manager.failed=註冊表建立失敗
vcpkg.registry.task.install.package.manager.failed.ioexception=無法建立或存取目錄
vcpkg.registry.task.install.package.manager.failed.streamwrite=無法建立或存取 JSON 檔案
vcpkg.registry.task.install.package.manager.successful=已成功建立註冊表
vcpkg.regsitry.adding.packages.step.portfile.creating.git.data.name=Git
vcpkg.return.status.exit.code.is=Vcpkg 失敗，退出程式碼為 {0}
vcpkg.return.status.failed.parse.result=無法解析 vcpkg 指令
vcpkg.return.status.process.failed=無法執行 vcpkg。找不到可執行檔案 vcpkg
vcpkg.scheme.name=架構: Vcpkg
vcpkg.table.column.name=名稱
vcpkg.table.column.version=版本
vcpkg.toolwindow.button.add.registry.description=新增新的個人儲存庫
vcpkg.toolwindow.button.add.registry.name=新增註冊表
vcpkg.toolwindow.button.auto.reload.cmake.after.install.description=安裝軟體套件後自動重新載入 CMake
vcpkg.toolwindow.button.auto.reload.cmake.after.install.name=安裝軟體套件後重新載入 CMake
vcpkg.toolwindow.button.check.for.update.description=檢查 Git 儲存庫更新
vcpkg.toolwindow.button.check.for.update.name=檢查更新
vcpkg.toolwindow.button.console.check.error.description=在主控台輸出中提供快速修復
vcpkg.toolwindow.button.console.check.error.name=在輸出檢視中顯示快速修復
vcpkg.toolwindow.button.install.package.name=安裝
vcpkg.toolwindow.button.pull.and.update.description=更新 Git 儲存庫並更新 vcpkg
vcpkg.toolwindow.button.pull.and.update.name=全部更新
vcpkg.toolwindow.button.remove.package.name=刪除軟體套件
vcpkg.toolwindow.button.remove.repository.description=刪除儲存庫
vcpkg.toolwindow.button.remove.repository.name=刪除儲存庫
vcpkg.toolwindow.button.repository.on.start.update.description=軟體套件管理器將在 IDE 啟動時自動更新
vcpkg.toolwindow.button.repository.on.start.update.name=IDE 啟動時自動更新儲存庫
vcpkg.toolwindow.button.settings.description=軟體套件管理器的設定
vcpkg.toolwindow.button.settings.name=設定
vcpkg.toolwindow.button.show.console.description=使用 vcpkg 輸出顯示主控台
vcpkg.toolwindow.button.show.console.name=顯示主控台
vcpkg.toolwindow.button.update.git.repository.description=將 Git 儲存庫更新到最新版本
vcpkg.toolwindow.button.update.git.repository.name=更新 Vcpkg 儲存庫
vcpkg.toolwindow.button.update.repository.description=檢查當前版本的 vcpkg 是否可以從當前版本的 Git 儲存庫更新任何已安裝的軟體套件。\n注意: 這並不能保證您獲得最新版本的軟體套件，因為您還需要更新 Git 儲存庫才能進行完整更新
vcpkg.toolwindow.button.update.repository.name=更新儲存庫
vcpkg.toolwindow.button.upgrade.all.description=更新 Git 儲存庫並升級 vcpkg
vcpkg.toolwindow.button.upgrade.all.name=全部升級
vcpkg.toolwindow.button.upgrade.repository.description=重新建置所有過時的軟體套件
vcpkg.toolwindow.button.upgrade.repository.name=升級儲存庫
vcpkg.toolwindow.button.vcpkg.json.auto.update.description=在軟體套件安裝、更新或移除時自動更新 vcpkg.json。
vcpkg.toolwindow.button.vcpkg.json.auto.update.name=vcpkg.json 自動更改
vcpkg.toolwindow.mode.classic=經典
vcpkg.toolwindow.mode.manifest=清單
vcpkg.toolwindow.package.info.nothing.has.done=什麼都沒做
vcpkg.toolwindow.package.info.too.much.packages=中斷軟體套件安裝可能會使儲存庫處於無法使用的狀態。所選的軟體套件數量可能需要很長時間才能完成安裝。
vcpkg.toolwindow.package.info.vcpkg.json.install=新增到 vcpkg.json
vcpkg.toolwindow.package.info.vcpkg.json.loading=正在載入…
vcpkg.toolwindow.package.info.vcpkg.json.loading.task.name=載入 vcpkg.json
vcpkg.toolwindow.package.info.vcpkg.json.remove=從 vcpkg.json 中移除
vcpkg.toolwindow.package.info.vcpkg.json.switch.to.manifest.mode=切換到清單模式
vcpkg.toolwindow.package.not.selected=選擇軟體套件以檢視資訊。
vcpkg.toolwindow.package.triplet.action.remove.tooltip=刪除軟體套件
vcpkg.toolwindow.package.triplet.action.upgrade.tooltip=升級軟體套件
vcpkg.toolwindow.package.triplet.installed.triplets=已安裝的三元組:
vcpkg.toolwindow.package.triplet.lets.cmake.decide=讓 vcpkg 決定
vcpkg.toolwindow.package.triplet.manifest.mode=清單模式
vcpkg.toolwindow.package.triplet.name=三元組:
vcpkg.toolwindow.package.triplet.name.and.version={0} ({1})
vcpkg.toolwindow.package.triplet.no.triplets.found=未安裝軟體套件
vcpkg.toolwindow.table.model.name.with.count=(找到 {0} 個)
vcpkg.toolwindow.table.splitter.all=所有
vcpkg.toolwindow.table.splitter.installed.classic=已安裝 | 經典模式
vcpkg.toolwindow.table.splitter.installed.manifest=已新增 | 清單模式
vcpkg.toolwindow.table.warning.not.updated=軟體套件可以更新({0} -> {1})
vcpkg.toolwindow.table.warning.not.updated.no.version=<無版本>
vcpkg.toolwindow.task.bootstrap.failed=引導失敗。原因:\n{0}
vcpkg.toolwindow.task.bootstrap.vcpkg=正在引導 vcpkg
vcpkg.toolwindow.task.check.for.update.failed=檢查更新失敗。原因:\n{0}
vcpkg.toolwindow.task.check.for.update.label=正在檢查更新
vcpkg.toolwindow.task.check.for.update.successful.can.be.updated=儲存庫可以更新
vcpkg.toolwindow.task.check.for.update.successful.updated=儲存庫已更新
vcpkg.toolwindow.task.clone.and.bootstrap.successful=克隆和引導成功
vcpkg.toolwindow.task.git.clone.failed=Git 克隆失敗。原因:\n{0}
vcpkg.toolwindow.task.git.update.and.vcpkg.update=正在更新 Git 和 vcpkg
vcpkg.toolwindow.task.git.update.and.vcpkg.update.failed.git=Git 拉取失敗。原因: {0}
vcpkg.toolwindow.task.git.update.and.vcpkg.update.failed.vcpkg=vcpkg 更新失敗。原因: {0}
vcpkg.toolwindow.task.git.update.and.vcpkg.update.successful=Git 拉取和 vcpkg 更新成功。過時的軟體套件:\n{0}
vcpkg.toolwindow.task.git.update.and.vcpkg.upgrade=Git 拉取和 vcpkg 升級
vcpkg.toolwindow.task.git.update.and.vcpkg.upgrade.failed.git=Git 拉取失敗。原因: {0}
vcpkg.toolwindow.task.git.update.and.vcpkg.upgrade.failed.vcpkg=vcpkg 升級失敗。原因: {0}
vcpkg.toolwindow.task.git.update.and.vcpkg.upgrade.successful=Git 拉取和 vcpkg 更新成功。已更新的軟體套件:\n{0}
vcpkg.toolwindow.task.git.update.and.vcpkg.upgrade.successful.no.packages=Git 拉取和 vcpkg 升級成功，沒有要更新的軟體套件
vcpkg.toolwindow.task.install.failed=安裝失敗。原因:\n{0}
vcpkg.toolwindow.task.install.successful.top=安裝成功。已安裝的軟體套件:\n{0}
vcpkg.toolwindow.task.install.vcpkg=安裝 vcpkg
vcpkg.toolwindow.task.installed.failed=已安裝內容搜尋失敗。原因:\n{0}
vcpkg.toolwindow.task.installed.successful=已成功載入的已安裝軟體套件列表
vcpkg.toolwindow.task.query.failed=搜尋失敗。原因:\n{0}
vcpkg.toolwindow.task.remove.failed=移除失敗。原因:\n{0}
vcpkg.toolwindow.task.remove.successful.no.packages=沒有要移除的軟體套件
vcpkg.toolwindow.task.remove.successful.top=移除成功。已移除的軟體套件:\n{0}
vcpkg.toolwindow.task.start.package.manager=正在啟動軟體套件管理器
vcpkg.toolwindow.task.start.package.manager.failed=無法啟動軟體套件管理器
vcpkg.toolwindow.task.successful.more=和 {0} 個其他軟體套件
vcpkg.toolwindow.task.update.failed=更新失敗。原因:\n{0}
vcpkg.toolwindow.task.update.git.repository=正在更新 Git 儲存庫
vcpkg.toolwindow.task.update.git.repository.failed=更新 Git 儲存庫失敗。原因:\n{0}
vcpkg.toolwindow.task.update.git.repository.successful=Git 儲存庫更新成功
vcpkg.toolwindow.task.update.packages=正在更新軟體套件
vcpkg.toolwindow.task.update.successful=更新成功。軟體套件可以更新:\n{0}
vcpkg.toolwindow.task.update.successful.no.packages=沒有要更新的軟體套件
vcpkg.toolwindow.task.upgrade.failed=升級失敗。原因:\n{0}
vcpkg.toolwindow.task.upgrade.packages=正在升級軟體套件
vcpkg.toolwindow.task.upgrade.successful=更新成功。已更新的軟體套件:\n{0}
vcpkg.toolwindow.task.upgrade.successful.no.packages=沒有要升級的軟體套件
wait.until.install.package.manager=正在安裝軟體套件管理器…